SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Afonso\Documents\GitHub\XtrmCAS\XtrmCAS.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       XtrmCAS.c     1    /*****************************************************************/
       XtrmCAS.c     2    /*                                                               */
       XtrmCAS.c     3    /*   CASIO fx-9860G SDK Library                                  */
       XtrmCAS.c     4    /*                                                               */
       XtrmCAS.c     5    /*   File name : [ProjectName].c                                 */
       XtrmCAS.c     6    /*                                                               */
       XtrmCAS.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
       XtrmCAS.c     8    /*                                                               */
       XtrmCAS.c     9    /*****************************************************************/
       XtrmCAS.c    10    #include "fxlib.h"
       XtrmCAS.c    11    #include "aritmetic_processor.h"
       XtrmCAS.c    12    
       XtrmCAS.c    13    //****************************************************************************
       XtrmCAS.c    14    //  AddIn_main (Sample program main function)
       XtrmCAS.c    15    //
       XtrmCAS.c    16    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
       XtrmCAS.c    17    //                        : 0 = This application is launched by a strip in eACT application.
       XtrmCAS.c    18    //
       XtrmCAS.c    19    //              OptionNum : Strip number (0~3)
       XtrmCAS.c    20    //                         (This parameter is only used when isAppli parameter is 0.)
       XtrmCAS.c    21    //
       XtrmCAS.c    22    //  retval  :   1 = No error / 0 = Error
       XtrmCAS.c    23    //
       XtrmCAS.c    24    //****************************************************************************
       XtrmCAS.c    25    int AddIn_main(int isAppli, unsigned short OptionNum)
       XtrmCAS.c    26    {
       XtrmCAS.c    27        unsigned int key;
       XtrmCAS.c    28    
       XtrmCAS.c    29        Bdisp_AllClr_DDVRAM();
       XtrmCAS.c    30            ML_clear_screen();
       XtrmCAS.c    31        locate(1,1);
       XtrmCAS.c    32        doloop();
       XtrmCAS.c    33            locate(1,1);
       XtrmCAS.c    34            Print((unsigned char*)"Adeus");
       XtrmCAS.c    35            GetKey(&key);
       XtrmCAS.c    36    
       XtrmCAS.c    37        return 1;
       XtrmCAS.c    38    }
       XtrmCAS.c    39    
       XtrmCAS.c    40    
       XtrmCAS.c    41    
       XtrmCAS.c    42    
       XtrmCAS.c    43    //****************************************************************************
       XtrmCAS.c    44    //**************                                              ****************
       XtrmCAS.c    45    //**************                 Notice!                      ****************
       XtrmCAS.c    46    //**************                                              ****************
       XtrmCAS.c    47    //**************  Please do not change the following source.  ****************
       XtrmCAS.c    48    //**************                                              ****************
       XtrmCAS.c    49    //****************************************************************************
       XtrmCAS.c    50    
       XtrmCAS.c    51    
       XtrmCAS.c    52    #pragma section _BR_Size
       XtrmCAS.c    53    unsigned long BR_Size;
       XtrmCAS.c    54    #pragma section




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       XtrmCAS.c    55    
       XtrmCAS.c    56    
       XtrmCAS.c    57    #pragma section _TOP
       XtrmCAS.c    58    
       XtrmCAS.c    59    //****************************************************************************
       XtrmCAS.c    60    //  InitializeSystem
       XtrmCAS.c    61    //
       XtrmCAS.c    62    //  param   :   isAppli   : 1 = Application / 0 = eActivity
       XtrmCAS.c    63    //              OptionNum : Option Number (only eActivity)
       XtrmCAS.c    64    //
       XtrmCAS.c    65    //  retval  :   1 = No error / 0 = Error
       XtrmCAS.c    66    //
       XtrmCAS.c    67    //****************************************************************************
       XtrmCAS.c    68    int InitializeSystem(int isAppli, unsigned short OptionNum)
       XtrmCAS.c    69    {
       XtrmCAS.c    70        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
       XtrmCAS.c    71    }
       XtrmCAS.c    72    
       XtrmCAS.c    73    #pragma section
       XtrmCAS.c    74    
P   00000000              _x_gcd:                          ; function: x_gcd
                                                           ; frame size=4
                                                           ; used runtime library name:
                                                           ; __modls
    00000000 4F22                   STS.L       PR,@-R15
    00000002 3453                   CMP/GE      R5,R4
    00000004 8902                   BT          L905
    00000006 6643                   MOV         R4,R6
    00000008 6453                   MOV         R5,R4
    0000000A 6563                   MOV         R6,R5
    0000000C              L905:                             
    0000000C D393                   MOV.L       L1237,R3   ; __modls
    0000000E 6143                   MOV         R4,R1
    00000010 430B                   JSR         @R3
    00000012 6053                   MOV         R5,R0
    00000014 6603                   MOV         R0,R6
    00000016 2668                   TST         R6,R6
    00000018 8B02                   BF          L906
    0000001A 4F26                   LDS.L       @R15+,PR
    0000001C 000B                   RTS
    0000001E 6053                   MOV         R5,R0
    00000020              L906:                             
    00000020 6453                   MOV         R5,R4
    00000022 AFF3                   BRA         L905
    00000024 6563                   MOV         R6,R5
    00000026              L907:                             
    00000026 4F26                   LDS.L       @R15+,PR
    00000028 000B                   RTS
    0000002A 0009                   NOP
    0000002C              _x_lcm:                          ; function: x_lcm
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __divls
    0000002C 2F86                   MOV.L       R8,@-R15
    0000002E 6353                   MOV         R5,R3
    00000030 4F22                   STS.L       PR,@-R15
    00000032 4F12                   STS.L       MACL,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000034 7FF8                   ADD         #-8,R15
    00000036 1F41                   MOV.L       R4,@(4,R15)
    00000038 2F52                   MOV.L       R5,@R15
    0000003A 52F1                   MOV.L       @(4,R15),R2
    0000003C 0237                   MUL.L       R3,R2
    0000003E 011A                   STS         MACL,R1
    00000040 6813                   MOV         R1,R8
    00000042 BFDD                   BSR         _x_gcd
    00000044 6423                   MOV         R2,R4
    00000046 D386                   MOV.L       L1237+4,R3 ; __divls
    00000048 430B                   JSR         @R3
    0000004A 6183                   MOV         R8,R1
    0000004C 7F08                   ADD         #8,R15
    0000004E 4F16                   LDS.L       @R15+,MACL
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 000B                   RTS
    00000054 68F6                   MOV.L       @R15+,R8
    00000056              _simp_fract:                     ; function: simp_fract
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __divls
    00000056 2FE6                   MOV.L       R14,@-R15
    00000058 4F22                   STS.L       PR,@-R15
    0000005A 6E43                   MOV         R4,R14
    0000005C 55E1                   MOV.L       @(4,R14),R5
    0000005E BFCF                   BSR         _x_gcd
    00000060 64E2                   MOV.L       @R14,R4
    00000062 6403                   MOV         R0,R4
    00000064 D27E                   MOV.L       L1237+4,R2 ; __divls
    00000066 420B                   JSR         @R2
    00000068 61E2                   MOV.L       @R14,R1
    0000006A 2E02                   MOV.L       R0,@R14
    0000006C 51E1                   MOV.L       @(4,R14),R1
    0000006E D37C                   MOV.L       L1237+4,R3 ; __divls
    00000070 430B                   JSR         @R3
    00000072 6043                   MOV         R4,R0
    00000074 1E01                   MOV.L       R0,@(4,R14)
    00000076 4F26                   LDS.L       @R15+,PR
    00000078 000B                   RTS
    0000007A 6EF6                   MOV.L       @R15+,R14
    0000007C              _isvalid_fract:                  ; function: isvalid_fract
                                                           ; frame size=0
    0000007C 5341                   MOV.L       @(4,R4),R3
    0000007E 2338                   TST         R3,R3
    00000080 8B02                   BF          L910
    00000082 6342                   MOV.L       @R4,R3
    00000084 2338                   TST         R3,R3
    00000086 8B02                   BF          L715
    00000088              L910:                             
    00000088 5042                   MOV.L       @(8,R4),R0
    0000008A 8802                   CMP/EQ      #2,R0
    0000008C 8B01                   BF          L912
    0000008E              L715:
    0000008E 000B                   RTS
    00000090 E000                   MOV         #0,R0
    00000092              L912:                             
    00000092 E001                   MOV         #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000094              L911:                             
    00000094 000B                   RTS
    00000096 0009                   NOP
    00000098              _init_fract:                     ; function: init_fract
                                                           ; frame size=0
    00000098 E500                   MOV         #0,R5
    0000009A E301                   MOV         #1,R3
    0000009C 1451                   MOV.L       R5,@(4,R4)
    0000009E 2452                   MOV.L       R5,@R4
    000000A0 000B                   RTS
    000000A2 1432                   MOV.L       R3,@(8,R4)
    000000A4              _add_fract:                      ; function: add_fract
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __divls
    000000A4 2FE6                   MOV.L       R14,@-R15
    000000A6 6E63                   MOV         R6,R14
    000000A8 2FD6                   MOV.L       R13,@-R15
    000000AA 6D43                   MOV         R4,R13
    000000AC 2FC6                   MOV.L       R12,@-R15
    000000AE 6C53                   MOV         R5,R12
    000000B0 2F86                   MOV.L       R8,@-R15
    000000B2 4F22                   STS.L       PR,@-R15
    000000B4 4F12                   STS.L       MACL,@-R15
    000000B6 BFEF                   BSR         _init_fract
    000000B8 6463                   MOV         R6,R4
    000000BA BFDF                   BSR         _isvalid_fract
    000000BC 64D3                   MOV         R13,R4
    000000BE 2008                   TST         R0,R0
    000000C0 8903                   BT          L915
    000000C2 BFDB                   BSR         _isvalid_fract
    000000C4 64C3                   MOV         R12,R4
    000000C6 2008                   TST         R0,R0
    000000C8 8B07                   BF          L914
    000000CA              L915:                             
    000000CA E202                   MOV         #2,R2
    000000CC D365                   MOV.L       L1237+8,R3 ; L374
    000000CE 1E22                   MOV.L       R2,@(8,R14)
    000000D0 D265                   MOV.L       L1237+12,R2; _print
    000000D2 420B                   JSR         @R2
    000000D4 2F36                   MOV.L       R3,@-R15
    000000D6 A03F                   BRA         L916
    000000D8 7F04                   ADD         #4,R15
    000000DA              L914:                             
    000000DA 61D2                   MOV.L       @R13,R1
    000000DC 2118                   TST         R1,R1
    000000DE 8B06                   BF          L917
    000000E0 52C1                   MOV.L       @(4,R12),R2
    000000E2 1E21                   MOV.L       R2,@(4,R14)
    000000E4 63C2                   MOV.L       @R12,R3
    000000E6 2E32                   MOV.L       R3,@R14
    000000E8 52C2                   MOV.L       @(8,R12),R2
    000000EA A035                   BRA         L916
    000000EC 1E22                   MOV.L       R2,@(8,R14)
    000000EE              L917:                             
    000000EE 63C2                   MOV.L       @R12,R3
    000000F0 2338                   TST         R3,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F2 8B06                   BF          L918
    000000F4 53D1                   MOV.L       @(4,R13),R3
    000000F6 1E31                   MOV.L       R3,@(4,R14)
    000000F8 62D2                   MOV.L       @R13,R2
    000000FA 2E22                   MOV.L       R2,@R14
    000000FC 53D2                   MOV.L       @(8,R13),R3
    000000FE A02B                   BRA         L916
    00000100 1E32                   MOV.L       R3,@(8,R14)
    00000102              L918:                             
    00000102 55D1                   MOV.L       @(4,R13),R5
    00000104 BF92                   BSR         _x_lcm
    00000106 54C1                   MOV.L       @(4,R12),R4
    00000108 53D2                   MOV.L       @(8,R13),R3
    0000010A 6103                   MOV         R0,R1
    0000010C 62D2                   MOV.L       @R13,R2
    0000010E 6403                   MOV         R0,R4
    00000110 0237                   MUL.L       R3,R2
    00000112 031A                   STS         MACL,R3
    00000114 D252                   MOV.L       L1237+4,R2 ; __divls
    00000116 420B                   JSR         @R2
    00000118 50D1                   MOV.L       @(4,R13),R0
    0000011A 0307                   MUL.L       R0,R3
    0000011C 52C2                   MOV.L       @(8,R12),R2
    0000011E 031A                   STS         MACL,R3
    00000120 61C2                   MOV.L       @R12,R1
    00000122 0127                   MUL.L       R2,R1
    00000124 D84E                   MOV.L       L1237+4,R8 ; __divls
    00000126 6143                   MOV         R4,R1
    00000128 021A                   STS         MACL,R2
    0000012A 480B                   JSR         @R8
    0000012C 50C1                   MOV.L       @(4,R12),R0
    0000012E 0207                   MUL.L       R0,R2
    00000130 021A                   STS         MACL,R2
    00000132 332C                   ADD         R2,R3
    00000134 2E32                   MOV.L       R3,@R14
    00000136 1E41                   MOV.L       R4,@(4,R14)
    00000138 63E2                   MOV.L       @R14,R3
    0000013A 4311                   CMP/PZ      R3
    0000013C 8D05                   BT/S        L919
    0000013E 64E3                   MOV         R14,R4
    00000140 61E2                   MOV.L       @R14,R1
    00000142 E3FF                   MOV         #-1,R3
    00000144 611B                   NEG         R1,R1
    00000146 2E12                   MOV.L       R1,@R14
    00000148 1E32                   MOV.L       R3,@(8,R14)
    0000014A              L919:                             
    0000014A 4F16                   LDS.L       @R15+,MACL
    0000014C 4F26                   LDS.L       @R15+,PR
    0000014E 68F6                   MOV.L       @R15+,R8
    00000150 6CF6                   MOV.L       @R15+,R12
    00000152 6DF6                   MOV.L       @R15+,R13
    00000154 AF7F                   BRA         _simp_fract
    00000156 6EF6                   MOV.L       @R15+,R14
    00000158              L916:                             
    00000158 4F16                   LDS.L       @R15+,MACL
    0000015A 4F26                   LDS.L       @R15+,PR
    0000015C 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000015E 6CF6                   MOV.L       @R15+,R12
    00000160 6DF6                   MOV.L       @R15+,R13
    00000162 000B                   RTS
    00000164 6EF6                   MOV.L       @R15+,R14
    00000166              _subtr_fract:                    ; function: subtr_fract
                                                           ; frame size=8
    00000166 2FE6                   MOV.L       R14,@-R15
    00000168 4F22                   STS.L       PR,@-R15
    0000016A 6E53                   MOV         R5,R14
    0000016C 53E2                   MOV.L       @(8,R14),R3
    0000016E 633B                   NEG         R3,R3
    00000170 1E32                   MOV.L       R3,@(8,R14)
    00000172 BF97                   BSR         _add_fract
    00000174 65E3                   MOV         R14,R5
    00000176 53E2                   MOV.L       @(8,R14),R3
    00000178 633B                   NEG         R3,R3
    0000017A 1E32                   MOV.L       R3,@(8,R14)
    0000017C 4F26                   LDS.L       @R15+,PR
    0000017E 000B                   RTS
    00000180 6EF6                   MOV.L       @R15+,R14
    00000182              _mult_fract:                     ; function: mult_fract
                                                           ; frame size=24
    00000182 2FE6                   MOV.L       R14,@-R15
    00000184 2FD6                   MOV.L       R13,@-R15
    00000186 6E63                   MOV         R6,R14
    00000188 2FC6                   MOV.L       R12,@-R15
    0000018A 6D43                   MOV         R4,R13
    0000018C 4F22                   STS.L       PR,@-R15
    0000018E 6C53                   MOV         R5,R12
    00000190 4F12                   STS.L       MACL,@-R15
    00000192 53C1                   MOV.L       @(4,R12),R3
    00000194 52D1                   MOV.L       @(4,R13),R2
    00000196 0237                   MUL.L       R3,R2
    00000198 031A                   STS         MACL,R3
    0000019A 1E31                   MOV.L       R3,@(4,R14)
    0000019C 63C2                   MOV.L       @R12,R3
    0000019E 62D2                   MOV.L       @R13,R2
    000001A0 0237                   MUL.L       R3,R2
    000001A2 011A                   STS         MACL,R1
    000001A4 2E12                   MOV.L       R1,@R14
    000001A6 53C2                   MOV.L       @(8,R12),R3
    000001A8 52D2                   MOV.L       @(8,R13),R2
    000001AA 0237                   MUL.L       R3,R2
    000001AC 031A                   STS         MACL,R3
    000001AE 1E32                   MOV.L       R3,@(8,R14)
    000001B0 62D2                   MOV.L       @R13,R2
    000001B2 2228                   TST         R2,R2
    000001B4 8902                   BT          L922
    000001B6 62C2                   MOV.L       @R12,R2
    000001B8 2228                   TST         R2,R2
    000001BA 8B03                   BF          L921
    000001BC              L922:                             
    000001BC E201                   MOV         #1,R2
    000001BE E300                   MOV         #0,R3
    000001C0 1E22                   MOV.L       R2,@(8,R14)
    000001C2 1E31                   MOV.L       R3,@(4,R14)
    000001C4              L921:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C4 BF5A                   BSR         _isvalid_fract
    000001C6 64D3                   MOV         R13,R4
    000001C8 2008                   TST         R0,R0
    000001CA 8903                   BT          L924
    000001CC BF56                   BSR         _isvalid_fract
    000001CE 64C3                   MOV         R12,R4
    000001D0 2008                   TST         R0,R0
    000001D2 8B06                   BF          L923
    000001D4              L924:                             
    000001D4 D325                   MOV.L       L1237+16,R3; L390
    000001D6 E202                   MOV         #2,R2
    000001D8 1E22                   MOV.L       R2,@(8,R14)
    000001DA D223                   MOV.L       L1237+12,R2; _print
    000001DC 420B                   JSR         @R2
    000001DE 2F36                   MOV.L       R3,@-R15
    000001E0 7F04                   ADD         #4,R15
    000001E2              L923:                             
    000001E2 64E3                   MOV         R14,R4
    000001E4 4F16                   LDS.L       @R15+,MACL
    000001E6 4F26                   LDS.L       @R15+,PR
    000001E8 6CF6                   MOV.L       @R15+,R12
    000001EA 6DF6                   MOV.L       @R15+,R13
    000001EC AF33                   BRA         _simp_fract
    000001EE 6EF6                   MOV.L       @R15+,R14
    000001F0              _div_fract:                      ; function: div_fract
                                                           ; frame size=16
    000001F0 2FE6                   MOV.L       R14,@-R15
    000001F2 6E63                   MOV         R6,R14
    000001F4 4F22                   STS.L       PR,@-R15
    000001F6 4F12                   STS.L       MACL,@-R15
    000001F8 6352                   MOV.L       @R5,R3
    000001FA 5241                   MOV.L       @(4,R4),R2
    000001FC 0237                   MUL.L       R3,R2
    000001FE 031A                   STS         MACL,R3
    00000200 1E31                   MOV.L       R3,@(4,R14)
    00000202 5351                   MOV.L       @(4,R5),R3
    00000204 6242                   MOV.L       @R4,R2
    00000206 0237                   MUL.L       R3,R2
    00000208 011A                   STS         MACL,R1
    0000020A 2E12                   MOV.L       R1,@R14
    0000020C 5352                   MOV.L       @(8,R5),R3
    0000020E 5242                   MOV.L       @(8,R4),R2
    00000210 0237                   MUL.L       R3,R2
    00000212 031A                   STS         MACL,R3
    00000214 1E32                   MOV.L       R3,@(8,R14)
    00000216 6242                   MOV.L       @R4,R2
    00000218 2228                   TST         R2,R2
    0000021A 8B02                   BF          L926
    0000021C 6252                   MOV.L       @R5,R2
    0000021E 2228                   TST         R2,R2
    00000220 8910                   BT          L716
    00000222              L926:                             
    00000222 51E1                   MOV.L       @(4,R14),R1
    00000224 2118                   TST         R1,R1
    00000226 8B08                   BF          L928
    00000228 62E2                   MOV.L       @R14,R2
    0000022A 2228                   TST         R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000022C 8905                   BT          L928
    0000022E D210                   MOV.L       L1237+20,R2; L398
    00000230 D30D                   MOV.L       L1237+12,R3; _print
    00000232 430B                   JSR         @R3
    00000234 2F26                   MOV.L       R2,@-R15
    00000236 A00D                   BRA         L927
    00000238 7F04                   ADD         #4,R15
    0000023A              L928:                             
    0000023A 61E2                   MOV.L       @R14,R1
    0000023C 2118                   TST         R1,R1
    0000023E 8B04                   BF          L929
    00000240 E300                   MOV         #0,R3
    00000242 1E31                   MOV.L       R3,@(4,R14)
    00000244              L716:
    00000244 E201                   MOV         #1,R2
    00000246 A005                   BRA         L927
    00000248 1E22                   MOV.L       R2,@(8,R14)
    0000024A              L929:                             
    0000024A 64E3                   MOV         R14,R4
    0000024C 4F16                   LDS.L       @R15+,MACL
    0000024E 4F26                   LDS.L       @R15+,PR
    00000250 AF01                   BRA         _simp_fract
    00000252 6EF6                   MOV.L       @R15+,R14
    00000254              L927:                             
    00000254 4F16                   LDS.L       @R15+,MACL
    00000256 4F26                   LDS.L       @R15+,PR
    00000258 000B                   RTS
    0000025A 6EF6                   MOV.L       @R15+,R14
    0000025C              L1237:                            
    0000025C <00000000>             .DATA.L     __modls
    00000260 <00000000>             .DATA.L     __divls
    00000264 <00000000>             .DATA.L     L374
    00000268 <00000000>             .DATA.L     _print
    0000026C <00000000>             .DATA.L     L390
    00000270 <00000000>             .DATA.L     L398
    00000274              _pow_fract:                      ; function: pow_fract
                                                           ; frame size=40
    00000274 2FE6                   MOV.L       R14,@-R15
    00000276 6E43                   MOV         R4,R14
    00000278 2FD6                   MOV.L       R13,@-R15
    0000027A E401                   MOV         #1,R4
    0000027C 2FC6                   MOV.L       R12,@-R15
    0000027E 6D43                   MOV         R4,R13
    00000280 4F22                   STS.L       PR,@-R15
    00000282 6C53                   MOV         R5,R12
    00000284 7FE8                   ADD         #-24,R15
    00000286 3DC3                   CMP/GE      R12,R13
    00000288 63E2                   MOV.L       @R14,R3
    0000028A 1F33                   MOV.L       R3,@(12,R15)
    0000028C 52E1                   MOV.L       @(4,R14),R2
    0000028E 1F24                   MOV.L       R2,@(16,R15)
    00000290 53E2                   MOV.L       @(8,R14),R3
    00000292 1F35                   MOV.L       R3,@(20,R15)
    00000294 1E42                   MOV.L       R4,@(8,R14)
    00000296 2E42                   MOV.L       R4,@R14
    00000298 8D0E                   BT/S        L930
    0000029A 1E41                   MOV.L       R4,@(4,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000029C              L931:                             
    0000029C 62E2                   MOV.L       @R14,R2
    0000029E 66E3                   MOV         R14,R6
    000002A0 2F22                   MOV.L       R2,@R15
    000002A2 65F3                   MOV         R15,R5
    000002A4 53E1                   MOV.L       @(4,R14),R3
    000002A6 750C                   ADD         #12,R5
    000002A8 1F31                   MOV.L       R3,@(4,R15)
    000002AA 52E2                   MOV.L       @(8,R14),R2
    000002AC 1F22                   MOV.L       R2,@(8,R15)
    000002AE BF68                   BSR         _mult_fract
    000002B0 64F3                   MOV         R15,R4
    000002B2 7D01                   ADD         #1,R13
    000002B4 3DC3                   CMP/GE      R12,R13
    000002B6 8BF1                   BF          L931
    000002B8              L930:                             
    000002B8 BECD                   BSR         _simp_fract
    000002BA 64E3                   MOV         R14,R4
    000002BC 7F18                   ADD         #24,R15
    000002BE 4F26                   LDS.L       @R15+,PR
    000002C0 6CF6                   MOV.L       @R15+,R12
    000002C2 6DF6                   MOV.L       @R15+,R13
    000002C4 000B                   RTS
    000002C6 6EF6                   MOV.L       @R15+,R14
    000002C8              _init_poly:                      ; function: init_poly
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    000002C8 2FE6                   MOV.L       R14,@-R15
    000002CA 6E43                   MOV         R4,R14
    000002CC 4F22                   STS.L       PR,@-R15
    000002CE 7FF4                   ADD         #-12,R15
    000002D0 BEE2                   BSR         _init_fract
    000002D2 64F3                   MOV         R15,R4
    000002D4 954D                   MOV.W       L1238,R5   ; H'04B0
    000002D6 64E3                   MOV         R14,R4
    000002D8              L933:                             
    000002D8 D326                   MOV.L       L1238+2,R3 ; __quick_odd_mvn
    000002DA 6143                   MOV         R4,R1
    000002DC 62F3                   MOV         R15,R2
    000002DE 430B                   JSR         @R3
    000002E0 E00C                   MOV         #12,R0
    000002E2 740C                   ADD         #12,R4
    000002E4 62E3                   MOV         R14,R2
    000002E6 325C                   ADD         R5,R2
    000002E8 3426                   CMP/HI      R2,R4
    000002EA 8BF5                   BF          L933
    000002EC 7F0C                   ADD         #12,R15
    000002EE 4F26                   LDS.L       @R15+,PR
    000002F0 000B                   RTS
    000002F2 6EF6                   MOV.L       @R15+,R14
    000002F4              _poly_degree:                    ; function: poly_degree
                                                           ; frame size=0
    000002F4 E564                   MOV         #100,R5
    000002F6              L936:                             
    000002F6 6353                   MOV         R5,R3
    000002F8 6253                   MOV         R5,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002FA 4300                   SHLL        R3
    000002FC 332C                   ADD         R2,R3
    000002FE 4308                   SHLL2       R3
    00000300 6143                   MOV         R4,R1
    00000302 331C                   ADD         R1,R3
    00000304 6232                   MOV.L       @R3,R2
    00000306 2228                   TST         R2,R2
    00000308 8901                   BT          L937
    0000030A 000B                   RTS
    0000030C 6053                   MOV         R5,R0
    0000030E              L937:                             
    0000030E 7501                   ADD         #1,R5
    00000310 4511                   CMP/PZ      R5
    00000312 89F0                   BT          L936
    00000314 E0FF                   MOV         #-1,R0
    00000316              L938:                             
    00000316 000B                   RTS
    00000318 0009                   NOP
    0000031A              _print_poly:                     ; function: print_poly
                                                           ; frame size=52
    0000031A 2FE6                   MOV.L       R14,@-R15
    0000031C 2FD6                   MOV.L       R13,@-R15
    0000031E 2FC6                   MOV.L       R12,@-R15
    00000320 2FB6                   MOV.L       R11,@-R15
    00000322 2FA6                   MOV.L       R10,@-R15
    00000324 2F96                   MOV.L       R9,@-R15
    00000326 2F86                   MOV.L       R8,@-R15
    00000328 4F22                   STS.L       PR,@-R15
    0000032A 7FFC                   ADD         #-4,R15
    0000032C DE12                   MOV.L       L1238+6,R14; _print
    0000032E BFE1                   BSR         _poly_degree
    00000330 6D43                   MOV         R4,R13
    00000332 88FF                   CMP/EQ      #-1,R0
    00000334 8B02                   BF          L939
    00000336 D311                   MOV.L       L1238+10,R3; L424
    00000338 A0AE                   BRA         L1222
    0000033A 0009                   NOP
    0000033C              L939:                             
    0000033C D810                   MOV.L       L1238+14,R8; L427
    0000033E EB63                   MOV         #99,R11
    00000340 D910                   MOV.L       L1238+18,R9; L428
    00000342 DA11                   MOV.L       L1238+22,R10; L429
    00000344              L941:                             
    00000344 6CB3                   MOV         R11,R12
    00000346 63B3                   MOV         R11,R3
    00000348 4C00                   SHLL        R12
    0000034A 3C3C                   ADD         R3,R12
    0000034C 4C08                   SHLL2       R12
    0000034E 62D3                   MOV         R13,R2
    00000350 32CC                   ADD         R12,R2
    00000352 6322                   MOV.L       @R2,R3
    00000354 2338                   TST         R3,R3
    00000356 8943                   BT          L942
    00000358 60D3                   MOV         R13,R0
    0000035A 30CC                   ADD         R12,R0
    0000035C 5002                   MOV.L       @(8,R0),R0
    0000035E 8801                   CMP/EQ      #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000360 8B03                   BF          L943
    00000362 4E0B                   JSR         @R14
    00000364 2F86                   MOV.L       R8,@-R15
    00000366 A015                   BRA         L944
    00000368 7F04                   ADD         #4,R15
    0000036A              L943:                             
    0000036A 88FF                   CMP/EQ      #-1,R0
    0000036C 8B0E                   BF          L945
    0000036E A00E                   BRA         L1219
    00000370 2F96                   MOV.L       R9,@-R15
    00000372              L1238:                            
    00000372 04B0                   .DATA.W     H'04B0
    00000374 <00000000>             .DATA.L     __quick_odd_mvn
    00000378 <00000000>             .DATA.L     _print
    0000037C <00000000>             .DATA.L     L424
    00000380 <00000000>             .DATA.L     L427
    00000384 <00000000>             .DATA.L     L428
    00000388 <00000000>             .DATA.L     L429
    0000038C              L945:                             
    0000038C 2FA6                   MOV.L       R10,@-R15
    0000038E              L1219:                            
    0000038E 4E0B                   JSR         @R14
    00000390 0009                   NOP
    00000392 7F04                   ADD         #4,R15
    00000394              L944:                             
    00000394 60D3                   MOV         R13,R0
    00000396 30CC                   ADD         R12,R0
    00000398 5001                   MOV.L       @(4,R0),R0
    0000039A 8801                   CMP/EQ      #1,R0
    0000039C 8B13                   BF          L947
    0000039E 60D3                   MOV         R13,R0
    000003A0 00CE                   MOV.L       @(R0,R12),R0
    000003A2 8801                   CMP/EQ      #1,R0
    000003A4 8B05                   BF          L948
    000003A6 2FB6                   MOV.L       R11,@-R15
    000003A8 D277                   MOV.L       L1239+2,R2 ; L431
    000003AA 4E0B                   JSR         @R14
    000003AC 2F26                   MOV.L       R2,@-R15
    000003AE A017                   BRA         L942
    000003B0 7F08                   ADD         #8,R15
    000003B2              L948:                             
    000003B2 62D3                   MOV         R13,R2
    000003B4 2FB6                   MOV.L       R11,@-R15
    000003B6 3C2C                   ADD         R2,R12
    000003B8 63C2                   MOV.L       @R12,R3
    000003BA 2F36                   MOV.L       R3,@-R15
    000003BC D273                   MOV.L       L1239+6,R2 ; L432
    000003BE 4E0B                   JSR         @R14
    000003C0 2F26                   MOV.L       R2,@-R15
    000003C2 A00D                   BRA         L942
    000003C4 7F0C                   ADD         #12,R15
    000003C6              L947:                             
    000003C6 62D3                   MOV         R13,R2
    000003C8 D171                   MOV.L       L1239+10,R1; L434
    000003CA 3C2C                   ADD         R2,R12
    000003CC 2FB6                   MOV.L       R11,@-R15
    000003CE 1FC1                   MOV.L       R12,@(4,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003D0 53C1                   MOV.L       @(4,R12),R3
    000003D2 2F36                   MOV.L       R3,@-R15
    000003D4 52F2                   MOV.L       @(8,R15),R2
    000003D6 6322                   MOV.L       @R2,R3
    000003D8 2F36                   MOV.L       R3,@-R15
    000003DA 4E0B                   JSR         @R14
    000003DC 2F16                   MOV.L       R1,@-R15
    000003DE 7F10                   ADD         #16,R15
    000003E0              L942:                             
    000003E0 7BFF                   ADD         #-1,R11
    000003E2 E301                   MOV         #1,R3
    000003E4 3B37                   CMP/GT      R3,R11
    000003E6 89AD                   BT          L941
    000003E8 51D3                   MOV.L       @(12,R13),R1
    000003EA 2118                   TST         R1,R1
    000003EC 892C                   BT          L951
    000003EE 50D5                   MOV.L       @(20,R13),R0
    000003F0 8801                   CMP/EQ      #1,R0
    000003F2 8B03                   BF          L952
    000003F4 4E0B                   JSR         @R14
    000003F6 2F86                   MOV.L       R8,@-R15
    000003F8 A008                   BRA         L953
    000003FA 7F04                   ADD         #4,R15
    000003FC              L952:                             
    000003FC 88FF                   CMP/EQ      #-1,R0
    000003FE 8B01                   BF          L954
    00000400 A001                   BRA         L1220
    00000402 2F96                   MOV.L       R9,@-R15
    00000404              L954:                             
    00000404 2FA6                   MOV.L       R10,@-R15
    00000406              L1220:                            
    00000406 4E0B                   JSR         @R14
    00000408 0009                   NOP
    0000040A 7F04                   ADD         #4,R15
    0000040C              L953:                             
    0000040C 50D4                   MOV.L       @(16,R13),R0
    0000040E 8801                   CMP/EQ      #1,R0
    00000410 8B0E                   BF          L956
    00000412 50D3                   MOV.L       @(12,R13),R0
    00000414 8801                   CMP/EQ      #1,R0
    00000416 8B04                   BF          L957
    00000418 D35E                   MOV.L       L1239+14,R3; L437
    0000041A 4E0B                   JSR         @R14
    0000041C 2F36                   MOV.L       R3,@-R15
    0000041E A013                   BRA         L951
    00000420 7F04                   ADD         #4,R15
    00000422              L957:                             
    00000422 51D3                   MOV.L       @(12,R13),R1
    00000424 D35C                   MOV.L       L1239+18,R3; L438
    00000426 2F16                   MOV.L       R1,@-R15
    00000428 4E0B                   JSR         @R14
    0000042A 2F36                   MOV.L       R3,@-R15
    0000042C A00C                   BRA         L951
    0000042E 7F08                   ADD         #8,R15
    00000430              L956:                             
    00000430 61D3                   MOV         R13,R1
    00000432 710C                   ADD         #12,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000434 2F12                   MOV.L       R1,@R15
    00000436 5311                   MOV.L       @(4,R1),R3
    00000438 D158                   MOV.L       L1239+22,R1; L440
    0000043A 2F36                   MOV.L       R3,@-R15
    0000043C 52F1                   MOV.L       @(4,R15),R2
    0000043E 6322                   MOV.L       @R2,R3
    00000440 2F36                   MOV.L       R3,@-R15
    00000442 4E0B                   JSR         @R14
    00000444 2F16                   MOV.L       R1,@-R15
    00000446 7F0C                   ADD         #12,R15
    00000448              L951:                             
    00000448 63D2                   MOV.L       @R13,R3
    0000044A 2338                   TST         R3,R3
    0000044C 8923                   BT          L960
    0000044E 50D2                   MOV.L       @(8,R13),R0
    00000450 8801                   CMP/EQ      #1,R0
    00000452 8B03                   BF          L961
    00000454 4E0B                   JSR         @R14
    00000456 2F86                   MOV.L       R8,@-R15
    00000458 A008                   BRA         L962
    0000045A 7F04                   ADD         #4,R15
    0000045C              L961:                             
    0000045C 88FF                   CMP/EQ      #-1,R0
    0000045E 8B01                   BF          L963
    00000460 A001                   BRA         L1221
    00000462 2F96                   MOV.L       R9,@-R15
    00000464              L963:                             
    00000464 2FA6                   MOV.L       R10,@-R15
    00000466              L1221:                            
    00000466 4E0B                   JSR         @R14
    00000468 0009                   NOP
    0000046A 7F04                   ADD         #4,R15
    0000046C              L962:                             
    0000046C 50D1                   MOV.L       @(4,R13),R0
    0000046E 8801                   CMP/EQ      #1,R0
    00000470 8B06                   BF          L965
    00000472 62D2                   MOV.L       @R13,R2
    00000474 D34A                   MOV.L       L1239+26,R3; L443
    00000476 2F26                   MOV.L       R2,@-R15
    00000478 4E0B                   JSR         @R14
    0000047A 2F36                   MOV.L       R3,@-R15
    0000047C A00B                   BRA         L960
    0000047E 7F08                   ADD         #8,R15
    00000480              L965:                             
    00000480 61D3                   MOV         R13,R1
    00000482 2F12                   MOV.L       R1,@R15
    00000484 5311                   MOV.L       @(4,R1),R3
    00000486 2F36                   MOV.L       R3,@-R15
    00000488 52F1                   MOV.L       @(4,R15),R2
    0000048A 6322                   MOV.L       @R2,R3
    0000048C D145                   MOV.L       L1239+30,R1; L445
    0000048E 2F36                   MOV.L       R3,@-R15
    00000490 4E0B                   JSR         @R14
    00000492 2F16                   MOV.L       R1,@-R15
    00000494 7F0C                   ADD         #12,R15
    00000496              L960:                             
    00000496 D344                   MOV.L       L1239+34,R3; L446




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000498              L1222:                            
    00000498 4E0B                   JSR         @R14
    0000049A 2F36                   MOV.L       R3,@-R15
    0000049C 7F04                   ADD         #4,R15
    0000049E 7F04                   ADD         #4,R15
    000004A0 4F26                   LDS.L       @R15+,PR
    000004A2 68F6                   MOV.L       @R15+,R8
    000004A4 69F6                   MOV.L       @R15+,R9
    000004A6 6AF6                   MOV.L       @R15+,R10
    000004A8 6BF6                   MOV.L       @R15+,R11
    000004AA 6CF6                   MOV.L       @R15+,R12
    000004AC 6DF6                   MOV.L       @R15+,R13
    000004AE 000B                   RTS
    000004B0 6EF6                   MOV.L       @R15+,R14
    000004B2              _print_poly_noendl:              ; function: print_poly_noendl
                                                           ; frame size=52
    000004B2 2FE6                   MOV.L       R14,@-R15
    000004B4 2FD6                   MOV.L       R13,@-R15
    000004B6 2FC6                   MOV.L       R12,@-R15
    000004B8 2FB6                   MOV.L       R11,@-R15
    000004BA 2FA6                   MOV.L       R10,@-R15
    000004BC 2F96                   MOV.L       R9,@-R15
    000004BE 2F86                   MOV.L       R8,@-R15
    000004C0 4F22                   STS.L       PR,@-R15
    000004C2 7FFC                   ADD         #-4,R15
    000004C4 DE39                   MOV.L       L1239+38,R14; _print
    000004C6 BF15                   BSR         _poly_degree
    000004C8 6D43                   MOV         R4,R13
    000004CA 88FF                   CMP/EQ      #-1,R0
    000004CC 8B04                   BF          L967
    000004CE D338                   MOV.L       L1239+42,R3; L452
    000004D0 4E0B                   JSR         @R14
    000004D2 2F36                   MOV.L       R3,@-R15
    000004D4 A0BD                   BRA         L968
    000004D6 7F04                   ADD         #4,R15
    000004D8              L967:                             
    000004D8 D836                   MOV.L       L1239+46,R8; L427
    000004DA EB63                   MOV         #99,R11
    000004DC D936                   MOV.L       L1239+50,R9; L428
    000004DE DA37                   MOV.L       L1239+54,R10; L429
    000004E0              L969:                             
    000004E0 6CB3                   MOV         R11,R12
    000004E2 63B3                   MOV         R11,R3
    000004E4 4C00                   SHLL        R12
    000004E6 3C3C                   ADD         R3,R12
    000004E8 4C08                   SHLL2       R12
    000004EA 62D3                   MOV         R13,R2
    000004EC 32CC                   ADD         R12,R2
    000004EE 6322                   MOV.L       @R2,R3
    000004F0 2338                   TST         R3,R3
    000004F2 8936                   BT          L970
    000004F4 60D3                   MOV         R13,R0
    000004F6 30CC                   ADD         R12,R0
    000004F8 5002                   MOV.L       @(8,R0),R0
    000004FA 8801                   CMP/EQ      #1,R0
    000004FC 8B03                   BF          L971
    000004FE 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000500 2F86                   MOV.L       R8,@-R15
    00000502 A008                   BRA         L972
    00000504 7F04                   ADD         #4,R15
    00000506              L971:                             
    00000506 88FF                   CMP/EQ      #-1,R0
    00000508 8B01                   BF          L973
    0000050A A001                   BRA         L1223
    0000050C 2F96                   MOV.L       R9,@-R15
    0000050E              L973:                             
    0000050E 2FA6                   MOV.L       R10,@-R15
    00000510              L1223:                            
    00000510 4E0B                   JSR         @R14
    00000512 0009                   NOP
    00000514 7F04                   ADD         #4,R15
    00000516              L972:                             
    00000516 60D3                   MOV         R13,R0
    00000518 30CC                   ADD         R12,R0
    0000051A 5001                   MOV.L       @(4,R0),R0
    0000051C 8801                   CMP/EQ      #1,R0
    0000051E 8B13                   BF          L975
    00000520 60D3                   MOV         R13,R0
    00000522 00CE                   MOV.L       @(R0,R12),R0
    00000524 8801                   CMP/EQ      #1,R0
    00000526 8B05                   BF          L976
    00000528 2FB6                   MOV.L       R11,@-R15
    0000052A D217                   MOV.L       L1239+2,R2 ; L431
    0000052C 4E0B                   JSR         @R14
    0000052E 2F26                   MOV.L       R2,@-R15
    00000530 A017                   BRA         L970
    00000532 7F08                   ADD         #8,R15
    00000534              L976:                             
    00000534 2FB6                   MOV.L       R11,@-R15
    00000536 62D3                   MOV         R13,R2
    00000538 3C2C                   ADD         R2,R12
    0000053A 63C2                   MOV.L       @R12,R3
    0000053C D213                   MOV.L       L1239+6,R2 ; L432
    0000053E 2F36                   MOV.L       R3,@-R15
    00000540 4E0B                   JSR         @R14
    00000542 2F26                   MOV.L       R2,@-R15
    00000544 A00D                   BRA         L970
    00000546 7F0C                   ADD         #12,R15
    00000548              L975:                             
    00000548 2FB6                   MOV.L       R11,@-R15
    0000054A 62D3                   MOV         R13,R2
    0000054C D110                   MOV.L       L1239+10,R1; L434
    0000054E 3C2C                   ADD         R2,R12
    00000550 1FC1                   MOV.L       R12,@(4,R15)
    00000552 53C1                   MOV.L       @(4,R12),R3
    00000554 2F36                   MOV.L       R3,@-R15
    00000556 52F2                   MOV.L       @(8,R15),R2
    00000558 6322                   MOV.L       @R2,R3
    0000055A 2F36                   MOV.L       R3,@-R15
    0000055C 4E0B                   JSR         @R14
    0000055E 2F16                   MOV.L       R1,@-R15
    00000560 7F10                   ADD         #16,R15
    00000562              L970:                             
    00000562 7BFF                   ADD         #-1,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000564 E301                   MOV         #1,R3
    00000566 3B37                   CMP/GT      R3,R11
    00000568 89BA                   BT          L969
    0000056A 51D3                   MOV.L       @(12,R13),R1
    0000056C 2118                   TST         R1,R1
    0000056E 8949                   BT          L979
    00000570 50D5                   MOV.L       @(20,R13),R0
    00000572 8801                   CMP/EQ      #1,R0
    00000574 8B03                   BF          L980
    00000576 4E0B                   JSR         @R14
    00000578 2F86                   MOV.L       R8,@-R15
    0000057A A025                   BRA         L981
    0000057C 7F04                   ADD         #4,R15
    0000057E              L980:                             
    0000057E 88FF                   CMP/EQ      #-1,R0
    00000580 8B1E                   BF          L982
    00000582 A01E                   BRA         L1224
    00000584 2F96                   MOV.L       R9,@-R15
    00000586              L1239:                            
    00000586 0000                   .DATA.W     0
    00000588 <00000000>             .DATA.L     L431
    0000058C <00000000>             .DATA.L     L432
    00000590 <00000000>             .DATA.L     L434
    00000594 <00000000>             .DATA.L     L437
    00000598 <00000000>             .DATA.L     L438
    0000059C <00000000>             .DATA.L     L440
    000005A0 <00000000>             .DATA.L     L443
    000005A4 <00000000>             .DATA.L     L445
    000005A8 <00000000>             .DATA.L     L446
    000005AC <00000000>             .DATA.L     _print
    000005B0 <00000000>             .DATA.L     L452
    000005B4 <00000000>             .DATA.L     L427
    000005B8 <00000000>             .DATA.L     L428
    000005BC <00000000>             .DATA.L     L429
    000005C0              L982:                             
    000005C0 2FA6                   MOV.L       R10,@-R15
    000005C2              L1224:                            
    000005C2 4E0B                   JSR         @R14
    000005C4 0009                   NOP
    000005C6 7F04                   ADD         #4,R15
    000005C8              L981:                             
    000005C8 50D4                   MOV.L       @(16,R13),R0
    000005CA 8801                   CMP/EQ      #1,R0
    000005CC 8B0E                   BF          L984
    000005CE 50D3                   MOV.L       @(12,R13),R0
    000005D0 8801                   CMP/EQ      #1,R0
    000005D2 8B04                   BF          L985
    000005D4 D341                   MOV.L       L1240+2,R3 ; L437
    000005D6 4E0B                   JSR         @R14
    000005D8 2F36                   MOV.L       R3,@-R15
    000005DA A013                   BRA         L979
    000005DC 7F04                   ADD         #4,R15
    000005DE              L985:                             
    000005DE 51D3                   MOV.L       @(12,R13),R1
    000005E0 D33F                   MOV.L       L1240+6,R3 ; L438
    000005E2 2F16                   MOV.L       R1,@-R15
    000005E4 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005E6 2F36                   MOV.L       R3,@-R15
    000005E8 A00C                   BRA         L979
    000005EA 7F08                   ADD         #8,R15
    000005EC              L984:                             
    000005EC 61D3                   MOV         R13,R1
    000005EE 710C                   ADD         #12,R1
    000005F0 2F12                   MOV.L       R1,@R15
    000005F2 5311                   MOV.L       @(4,R1),R3
    000005F4 D13B                   MOV.L       L1240+10,R1; L440
    000005F6 2F36                   MOV.L       R3,@-R15
    000005F8 52F1                   MOV.L       @(4,R15),R2
    000005FA 6322                   MOV.L       @R2,R3
    000005FC 2F36                   MOV.L       R3,@-R15
    000005FE 4E0B                   JSR         @R14
    00000600 2F16                   MOV.L       R1,@-R15
    00000602 7F0C                   ADD         #12,R15
    00000604              L979:                             
    00000604 63D2                   MOV.L       @R13,R3
    00000606 2338                   TST         R3,R3
    00000608 8923                   BT          L968
    0000060A 50D2                   MOV.L       @(8,R13),R0
    0000060C 8801                   CMP/EQ      #1,R0
    0000060E 8B03                   BF          L989
    00000610 4E0B                   JSR         @R14
    00000612 2F86                   MOV.L       R8,@-R15
    00000614 A008                   BRA         L990
    00000616 7F04                   ADD         #4,R15
    00000618              L989:                             
    00000618 88FF                   CMP/EQ      #-1,R0
    0000061A 8B01                   BF          L991
    0000061C A001                   BRA         L1225
    0000061E 2F96                   MOV.L       R9,@-R15
    00000620              L991:                             
    00000620 2FA6                   MOV.L       R10,@-R15
    00000622              L1225:                            
    00000622 4E0B                   JSR         @R14
    00000624 0009                   NOP
    00000626 7F04                   ADD         #4,R15
    00000628              L990:                             
    00000628 50D1                   MOV.L       @(4,R13),R0
    0000062A 8801                   CMP/EQ      #1,R0
    0000062C 8B06                   BF          L993
    0000062E 62D2                   MOV.L       @R13,R2
    00000630 D32D                   MOV.L       L1240+14,R3; L443
    00000632 2F26                   MOV.L       R2,@-R15
    00000634 4E0B                   JSR         @R14
    00000636 2F36                   MOV.L       R3,@-R15
    00000638 A00B                   BRA         L968
    0000063A 7F08                   ADD         #8,R15
    0000063C              L993:                             
    0000063C 61D3                   MOV         R13,R1
    0000063E 2F12                   MOV.L       R1,@R15
    00000640 5311                   MOV.L       @(4,R1),R3
    00000642 2F36                   MOV.L       R3,@-R15
    00000644 52F1                   MOV.L       @(4,R15),R2
    00000646 6322                   MOV.L       @R2,R3
    00000648 D128                   MOV.L       L1240+18,R1; L445




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000064A 2F36                   MOV.L       R3,@-R15
    0000064C 4E0B                   JSR         @R14
    0000064E 2F16                   MOV.L       R1,@-R15
    00000650 7F0C                   ADD         #12,R15
    00000652              L968:                             
    00000652 7F04                   ADD         #4,R15
    00000654 4F26                   LDS.L       @R15+,PR
    00000656 68F6                   MOV.L       @R15+,R8
    00000658 69F6                   MOV.L       @R15+,R9
    0000065A 6AF6                   MOV.L       @R15+,R10
    0000065C 6BF6                   MOV.L       @R15+,R11
    0000065E 6CF6                   MOV.L       @R15+,R12
    00000660 6DF6                   MOV.L       @R15+,R13
    00000662 000B                   RTS
    00000664 6EF6                   MOV.L       @R15+,R14
    00000666              _add_poly:                       ; function: add_poly
                                                           ; frame size=28
    00000666 2FE6                   MOV.L       R14,@-R15
    00000668 2FD6                   MOV.L       R13,@-R15
    0000066A 2FC6                   MOV.L       R12,@-R15
    0000066C 4F22                   STS.L       PR,@-R15
    0000066E EC64                   MOV         #100,R12
    00000670 7FF4                   ADD         #-12,R15
    00000672 1F41                   MOV.L       R4,@(4,R15)
    00000674 2F52                   MOV.L       R5,@R15
    00000676 E400                   MOV         #0,R4
    00000678 1F62                   MOV.L       R6,@(8,R15)
    0000067A 6D43                   MOV         R4,R13
    0000067C 6E43                   MOV         R4,R14
    0000067E              L995:                             
    0000067E 56F2                   MOV.L       @(8,R15),R6
    00000680 65F2                   MOV.L       @R15,R5
    00000682 36EC                   ADD         R14,R6
    00000684 54F1                   MOV.L       @(4,R15),R4
    00000686 35EC                   ADD         R14,R5
    00000688 BD0C                   BSR         _add_fract
    0000068A 34EC                   ADD         R14,R4
    0000068C 7D01                   ADD         #1,R13
    0000068E 3DC3                   CMP/GE      R12,R13
    00000690 8FF5                   BF/S        L995
    00000692 7E0C                   ADD         #12,R14
    00000694 7F0C                   ADD         #12,R15
    00000696 4F26                   LDS.L       @R15+,PR
    00000698 6CF6                   MOV.L       @R15+,R12
    0000069A 6DF6                   MOV.L       @R15+,R13
    0000069C 000B                   RTS
    0000069E 6EF6                   MOV.L       @R15+,R14
    000006A0              _subtr_poly:                     ; function: subtr_poly
                                                           ; frame size=28
    000006A0 2FE6                   MOV.L       R14,@-R15
    000006A2 2FD6                   MOV.L       R13,@-R15
    000006A4 2FC6                   MOV.L       R12,@-R15
    000006A6 EC64                   MOV         #100,R12
    000006A8 4F22                   STS.L       PR,@-R15
    000006AA 7FF4                   ADD         #-12,R15
    000006AC 1F41                   MOV.L       R4,@(4,R15)
    000006AE E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006B0 2F52                   MOV.L       R5,@R15
    000006B2 6D43                   MOV         R4,R13
    000006B4 1F62                   MOV.L       R6,@(8,R15)
    000006B6 6E43                   MOV         R4,R14
    000006B8              L997:                             
    000006B8 56F2                   MOV.L       @(8,R15),R6
    000006BA 36EC                   ADD         R14,R6
    000006BC 65F2                   MOV.L       @R15,R5
    000006BE 35EC                   ADD         R14,R5
    000006C0 54F1                   MOV.L       @(4,R15),R4
    000006C2 BD50                   BSR         _subtr_fract
    000006C4 34EC                   ADD         R14,R4
    000006C6 7D01                   ADD         #1,R13
    000006C8 3DC3                   CMP/GE      R12,R13
    000006CA 8FF5                   BF/S        L997
    000006CC 7E0C                   ADD         #12,R14
    000006CE 7F0C                   ADD         #12,R15
    000006D0 4F26                   LDS.L       @R15+,PR
    000006D2 6CF6                   MOV.L       @R15+,R12
    000006D4 6DF6                   MOV.L       @R15+,R13
    000006D6 000B                   RTS
    000006D8 6EF6                   MOV.L       @R15+,R14
    000006DA              L1240:                            
    000006DA 0000                   .DATA.W     0
    000006DC <00000000>             .DATA.L     L437
    000006E0 <00000000>             .DATA.L     L438
    000006E4 <00000000>             .DATA.L     L440
    000006E8 <00000000>             .DATA.L     L443
    000006EC <00000000>             .DATA.L     L445
    000006F0              _simetric_poly:                  ; function: simetric_poly
                                                           ; frame size=4
    000006F0 975B                   MOV.W       L1241,R7   ; H'04B0
    000006F2 7FFC                   ADD         #-4,R15
    000006F4 6543                   MOV         R4,R5
    000006F6 6653                   MOV         R5,R6
    000006F8 2F52                   MOV.L       R5,@R15
    000006FA              L999:                             
    000006FA 6362                   MOV.L       @R6,R3
    000006FC 2338                   TST         R3,R3
    000006FE 8902                   BT          L1000
    00000700 5352                   MOV.L       @(8,R5),R3
    00000702 633B                   NEG         R3,R3
    00000704 1532                   MOV.L       R3,@(8,R5)
    00000706              L1000:                            
    00000706 760C                   ADD         #12,R6
    00000708 6243                   MOV         R4,R2
    0000070A 327C                   ADD         R7,R2
    0000070C 3622                   CMP/HS      R2,R6
    0000070E 8FF4                   BF/S        L999
    00000710 750C                   ADD         #12,R5
    00000712 000B                   RTS
    00000714 7F04                   ADD         #4,R15
    00000716              _mult_poly:                      ; function: mult_poly
                                                           ; frame size=60
    00000716 2FE6                   MOV.L       R14,@-R15
    00000718 2FD6                   MOV.L       R13,@-R15
    0000071A 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000071C 2FB6                   MOV.L       R11,@-R15
    0000071E 6C63                   MOV         R6,R12
    00000720 2FA6                   MOV.L       R10,@-R15
    00000722 2F96                   MOV.L       R9,@-R15
    00000724 2F86                   MOV.L       R8,@-R15
    00000726 6853                   MOV         R5,R8
    00000728 4F22                   STS.L       PR,@-R15
    0000072A 7FE4                   ADD         #-28,R15
    0000072C 2F42                   MOV.L       R4,@R15
    0000072E BDCB                   BSR         _init_poly
    00000730 6463                   MOV         R6,R4
    00000732 64F3                   MOV         R15,R4
    00000734 BCB0                   BSR         _init_fract
    00000736 7410                   ADD         #16,R4
    00000738 64F3                   MOV         R15,R4
    0000073A BCAD                   BSR         _init_fract
    0000073C 7404                   ADD         #4,R4
    0000073E EA00                   MOV         #0,R10
    00000740 9934                   MOV.W       L1241+2,R9 ; H'0258
    00000742              L1002:                            
    00000742 6BA3                   MOV         R10,R11
    00000744 63A3                   MOV         R10,R3
    00000746 4B00                   SHLL        R11
    00000748 3B3C                   ADD         R3,R11
    0000074A 4B08                   SHLL2       R11
    0000074C 6EB3                   MOV         R11,R14
    0000074E 6D83                   MOV         R8,R13
    00000750              L1003:                            
    00000750 64F2                   MOV.L       @R15,R4
    00000752 66F3                   MOV         R15,R6
    00000754 7610                   ADD         #16,R6
    00000756 65D3                   MOV         R13,R5
    00000758 BD13                   BSR         _mult_fract
    0000075A 34BC                   ADD         R11,R4
    0000075C 66F3                   MOV         R15,R6
    0000075E 7604                   ADD         #4,R6
    00000760 65C3                   MOV         R12,R5
    00000762 35EC                   ADD         R14,R5
    00000764 64F3                   MOV         R15,R4
    00000766 BC9D                   BSR         _add_fract
    00000768 7410                   ADD         #16,R4
    0000076A 63C3                   MOV         R12,R3
    0000076C 52F1                   MOV.L       @(4,R15),R2
    0000076E 7D0C                   ADD         #12,R13
    00000770 33EC                   ADD         R14,R3
    00000772 2322                   MOV.L       R2,@R3
    00000774 52F2                   MOV.L       @(8,R15),R2
    00000776 63C3                   MOV         R12,R3
    00000778 33EC                   ADD         R14,R3
    0000077A 1321                   MOV.L       R2,@(4,R3)
    0000077C 52F3                   MOV.L       @(12,R15),R2
    0000077E 63C3                   MOV         R12,R3
    00000780 33EC                   ADD         R14,R3
    00000782 1322                   MOV.L       R2,@(8,R3)
    00000784 6383                   MOV         R8,R3
    00000786 339C                   ADD         R9,R3
    00000788 3D32                   CMP/HS      R3,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000078A 8FE1                   BF/S        L1003
    0000078C 7E0C                   ADD         #12,R14
    0000078E 7A01                   ADD         #1,R10
    00000790 E332                   MOV         #50,R3
    00000792 3A33                   CMP/GE      R3,R10
    00000794 8BD5                   BF          L1002
    00000796 7F1C                   ADD         #28,R15
    00000798 4F26                   LDS.L       @R15+,PR
    0000079A 68F6                   MOV.L       @R15+,R8
    0000079C 69F6                   MOV.L       @R15+,R9
    0000079E 6AF6                   MOV.L       @R15+,R10
    000007A0 6BF6                   MOV.L       @R15+,R11
    000007A2 6CF6                   MOV.L       @R15+,R12
    000007A4 6DF6                   MOV.L       @R15+,R13
    000007A6 000B                   RTS
    000007A8 6EF6                   MOV.L       @R15+,R14
    000007AA              L1241:                            
    000007AA 04B0                   .DATA.W     H'04B0
    000007AC 0258                   .DATA.W     H'0258
    000007AE              _div_poly:                       ; function: div_poly
                                                           ; frame size=2500
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    000007AE 2FE6                   MOV.L       R14,@-R15
    000007B0 2FD6                   MOV.L       R13,@-R15
    000007B2 6E43                   MOV         R4,R14
    000007B4 9081                   MOV.W       L1242,R0   ; H'F65C
    000007B6 2FC6                   MOV.L       R12,@-R15
    000007B8 2FB6                   MOV.L       R11,@-R15
    000007BA 2FA6                   MOV.L       R10,@-R15
    000007BC 2F96                   MOV.L       R9,@-R15
    000007BE 6953                   MOV         R5,R9
    000007C0 947C                   MOV.W       L1242+2,R4 ; H'04E8
    000007C2 2F86                   MOV.L       R8,@-R15
    000007C4 4F22                   STS.L       PR,@-R15
    000007C6 3F0C                   ADD         R0,R15
    000007C8 2F62                   MOV.L       R6,@R15
    000007CA BD7D                   BSR         _init_poly
    000007CC 34FC                   ADD         R15,R4
    000007CE 64F3                   MOV         R15,R4
    000007D0 BD7A                   BSR         _init_poly
    000007D2 742C                   ADD         #44,R4
    000007D4 BD78                   BSR         _init_poly
    000007D6 64F2                   MOV.L       @R15,R4
    000007D8 64F3                   MOV         R15,R4
    000007DA BC5D                   BSR         _init_fract
    000007DC 7420                   ADD         #32,R4
    000007DE E600                   MOV         #0,R6
    000007E0 6563                   MOV         R6,R5
    000007E2 EA64                   MOV         #100,R10
    000007E4 6463                   MOV         R6,R4
    000007E6              L1005:                            
    000007E6 63F3                   MOV         R15,R3
    000007E8 732C                   ADD         #44,R3
    000007EA 334C                   ADD         R4,R3
    000007EC 62E3                   MOV         R14,R2
    000007EE 324C                   ADD         R4,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007F0 6122                   MOV.L       @R2,R1
    000007F2 7501                   ADD         #1,R5
    000007F4 2312                   MOV.L       R1,@R3
    000007F6 62E3                   MOV         R14,R2
    000007F8 63F3                   MOV         R15,R3
    000007FA 732C                   ADD         #44,R3
    000007FC 334C                   ADD         R4,R3
    000007FE 324C                   ADD         R4,R2
    00000800 5121                   MOV.L       @(4,R2),R1
    00000802 35A7                   CMP/GT      R10,R5
    00000804 1311                   MOV.L       R1,@(4,R3)
    00000806 62E3                   MOV         R14,R2
    00000808 63F3                   MOV         R15,R3
    0000080A 732C                   ADD         #44,R3
    0000080C 334C                   ADD         R4,R3
    0000080E 324C                   ADD         R4,R2
    00000810 5122                   MOV.L       @(8,R2),R1
    00000812 1312                   MOV.L       R1,@(8,R3)
    00000814 8FE7                   BF/S        L1005
    00000816 740C                   ADD         #12,R4
    00000818 6DA3                   MOV         R10,R13
    0000081A              L1007:                            
    0000081A 62D3                   MOV         R13,R2
    0000081C 63D3                   MOV         R13,R3
    0000081E 4200                   SHLL        R2
    00000820 323C                   ADD         R3,R2
    00000822 4208                   SHLL2       R2
    00000824 6193                   MOV         R9,R1
    00000826 321C                   ADD         R1,R2
    00000828 6322                   MOV.L       @R2,R3
    0000082A 2338                   TST         R3,R3
    0000082C 8B02                   BF          L1006
    0000082E 7DFF                   ADD         #-1,R13
    00000830 4D11                   CMP/PZ      R13
    00000832 89F2                   BT          L1007
    00000834              L1006:                            
    00000834 63D3                   MOV         R13,R3
    00000836 62D3                   MOV         R13,R2
    00000838 4300                   SHLL        R3
    0000083A 332C                   ADD         R2,R3
    0000083C 4308                   SHLL2       R3
    0000083E 1F31                   MOV.L       R3,@(4,R15)
    00000840              L1011:                            
    00000840 6EA3                   MOV         R10,R14
    00000842              L1013:                            
    00000842 63E3                   MOV         R14,R3
    00000844 62E3                   MOV         R14,R2
    00000846 4300                   SHLL        R3
    00000848 332C                   ADD         R2,R3
    0000084A 4308                   SHLL2       R3
    0000084C 61F3                   MOV         R15,R1
    0000084E 712C                   ADD         #44,R1
    00000850 331C                   ADD         R1,R3
    00000852 6232                   MOV.L       @R3,R2
    00000854 2228                   TST         R2,R2
    00000856 8B02                   BF          L1012
    00000858 7EFF                   ADD         #-1,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000085A 4E11                   CMP/PZ      R14
    0000085C 89F1                   BT          L1013
    0000085E              L1012:                            
    0000085E 3ED3                   CMP/GE      R13,R14
    00000860 8B6A                   BF          L1022
    00000862 66F3                   MOV         R15,R6
    00000864 53F1                   MOV.L       @(4,R15),R3
    00000866 6593                   MOV         R9,R5
    00000868 7620                   ADD         #32,R6
    0000086A 353C                   ADD         R3,R5
    0000086C 64E3                   MOV         R14,R4
    0000086E 62E3                   MOV         R14,R2
    00000870 4400                   SHLL        R4
    00000872 342C                   ADD         R2,R4
    00000874 4408                   SHLL2       R4
    00000876 61F3                   MOV         R15,R1
    00000878 712C                   ADD         #44,R1
    0000087A BCB9                   BSR         _div_fract
    0000087C 341C                   ADD         R1,R4
    0000087E 68E3                   MOV         R14,R8
    00000880 61F2                   MOV.L       @R15,R1
    00000882 38D8                   SUB         R13,R8
    00000884 6383                   MOV         R8,R3
    00000886 6283                   MOV         R8,R2
    00000888 4300                   SHLL        R3
    0000088A 332C                   ADD         R2,R3
    0000088C 4308                   SHLL2       R3
    0000088E 313C                   ADD         R3,R1
    00000890 D30B                   MOV.L       L1242+6,R3 ; __quick_odd_mvn
    00000892 62F3                   MOV         R15,R2
    00000894 7220                   ADD         #32,R2
    00000896 430B                   JSR         @R3
    00000898 E00C                   MOV         #12,R0
    0000089A 64D3                   MOV         R13,R4
    0000089C 6BD3                   MOV         R13,R11
    0000089E 3BEC                   ADD         R14,R11
    000008A0 3BD8                   SUB         R13,R11
    000008A2 63B3                   MOV         R11,R3
    000008A4 4B00                   SHLL        R11
    000008A6 3B3C                   ADD         R3,R11
    000008A8 4B08                   SHLL2       R11
    000008AA 6CD3                   MOV         R13,R12
    000008AC 63D3                   MOV         R13,R3
    000008AE 4C00                   SHLL        R12
    000008B0 3C3C                   ADD         R3,R12
    000008B2 4C08                   SHLL2       R12
    000008B4 6293                   MOV         R9,R2
    000008B6 A016                   BRA         L1018
    000008B8 3C2C                   ADD         R2,R12
    000008BA              L1242:                            
    000008BA F65C                   .DATA.W     H'F65C
    000008BC 04E8                   .DATA.W     H'04E8
    000008BE 0000                   .DATA.W     0
    000008C0 <00000000>             .DATA.L     __quick_odd_mvn
    000008C4              L1019:                            
    000008C4 66F3                   MOV         R15,R6
    000008C6 7614                   ADD         #20,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008C8 65F3                   MOV         R15,R5
    000008CA 7520                   ADD         #32,R5
    000008CC BC59                   BSR         _mult_fract
    000008CE 64C3                   MOV         R12,R4
    000008D0 963D                   MOV.W       L1243,R6   ; H'04E8
    000008D2 65F3                   MOV         R15,R5
    000008D4 36FC                   ADD         R15,R6
    000008D6 36BC                   ADD         R11,R6
    000008D8 7514                   ADD         #20,R5
    000008DA 64F3                   MOV         R15,R4
    000008DC 742C                   ADD         #44,R4
    000008DE BC42                   BSR         _subtr_fract
    000008E0 34BC                   ADD         R11,R4
    000008E2 7BF4                   ADD         #-12,R11
    000008E4 7CF4                   ADD         #-12,R12
    000008E6              L1018:                            
    000008E6 6293                   MOV         R9,R2
    000008E8 3C22                   CMP/HS      R2,R12
    000008EA 89EB                   BT          L1019
    000008EC 65E3                   MOV         R14,R5
    000008EE 64E3                   MOV         R14,R4
    000008F0 63E3                   MOV         R14,R3
    000008F2 4400                   SHLL        R4
    000008F4 343C                   ADD         R3,R4
    000008F6 3583                   CMP/GE      R8,R5
    000008F8 8FA2                   BF/S        L1011
    000008FA 4408                   SHLL2       R4
    000008FC              L1021:                            
    000008FC 9227                   MOV.W       L1243,R2   ; H'04E8
    000008FE 75FF                   ADD         #-1,R5
    00000900 63F3                   MOV         R15,R3
    00000902 732C                   ADD         #44,R3
    00000904 334C                   ADD         R4,R3
    00000906 32FC                   ADD         R15,R2
    00000908 324C                   ADD         R4,R2
    0000090A 3583                   CMP/GE      R8,R5
    0000090C 6122                   MOV.L       @R2,R1
    0000090E 2312                   MOV.L       R1,@R3
    00000910 921D                   MOV.W       L1243,R2   ; H'04E8
    00000912 63F3                   MOV         R15,R3
    00000914 732C                   ADD         #44,R3
    00000916 334C                   ADD         R4,R3
    00000918 32FC                   ADD         R15,R2
    0000091A 324C                   ADD         R4,R2
    0000091C 5121                   MOV.L       @(4,R2),R1
    0000091E 1311                   MOV.L       R1,@(4,R3)
    00000920 9215                   MOV.W       L1243,R2   ; H'04E8
    00000922 63F3                   MOV         R15,R3
    00000924 732C                   ADD         #44,R3
    00000926 334C                   ADD         R4,R3
    00000928 32FC                   ADD         R15,R2
    0000092A 324C                   ADD         R4,R2
    0000092C 5122                   MOV.L       @(8,R2),R1
    0000092E 1312                   MOV.L       R1,@(8,R3)
    00000930 8DE4                   BT/S        L1021
    00000932 74F4                   ADD         #-12,R4
    00000934 AF84                   BRA         L1011




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000936 0009                   NOP
    00000938              L1022:                            
    00000938 910A                   MOV.W       L1243+2,R1 ; H'09A4
    0000093A 3F1C                   ADD         R1,R15
    0000093C 4F26                   LDS.L       @R15+,PR
    0000093E 68F6                   MOV.L       @R15+,R8
    00000940 69F6                   MOV.L       @R15+,R9
    00000942 6AF6                   MOV.L       @R15+,R10
    00000944 6BF6                   MOV.L       @R15+,R11
    00000946 6CF6                   MOV.L       @R15+,R12
    00000948 6DF6                   MOV.L       @R15+,R13
    0000094A 000B                   RTS
    0000094C 6EF6                   MOV.L       @R15+,R14
    0000094E              L1243:                            
    0000094E 04E8                   .DATA.W     H'04E8
    00000950 09A4                   .DATA.W     H'09A4
    00000952              _rem_poly:                       ; function: rem_poly
                                                           ; frame size=2500
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00000952 2FE6                   MOV.L       R14,@-R15
    00000954 2FD6                   MOV.L       R13,@-R15
    00000956 6E43                   MOV         R4,R14
    00000958 9080                   MOV.W       L1244,R0   ; H'F65C
    0000095A 2FC6                   MOV.L       R12,@-R15
    0000095C 2FB6                   MOV.L       R11,@-R15
    0000095E 2FA6                   MOV.L       R10,@-R15
    00000960 2F96                   MOV.L       R9,@-R15
    00000962 6963                   MOV         R6,R9
    00000964 947B                   MOV.W       L1244+2,R4 ; H'04E8
    00000966 2F86                   MOV.L       R8,@-R15
    00000968 4F22                   STS.L       PR,@-R15
    0000096A 6853                   MOV         R5,R8
    0000096C 3F0C                   ADD         R0,R15
    0000096E BCAB                   BSR         _init_poly
    00000970 34FC                   ADD         R15,R4
    00000972 64F3                   MOV         R15,R4
    00000974 BCA8                   BSR         _init_poly
    00000976 742C                   ADD         #44,R4
    00000978 BCA6                   BSR         _init_poly
    0000097A 6493                   MOV         R9,R4
    0000097C 64F3                   MOV         R15,R4
    0000097E BB8B                   BSR         _init_fract
    00000980 7420                   ADD         #32,R4
    00000982 E500                   MOV         #0,R5
    00000984 EA64                   MOV         #100,R10
    00000986 E400                   MOV         #0,R4
    00000988              L1023:                            
    00000988 63F3                   MOV         R15,R3
    0000098A 732C                   ADD         #44,R3
    0000098C 334C                   ADD         R4,R3
    0000098E 62E3                   MOV         R14,R2
    00000990 324C                   ADD         R4,R2
    00000992 7501                   ADD         #1,R5
    00000994 6122                   MOV.L       @R2,R1
    00000996 35A7                   CMP/GT      R10,R5
    00000998 2312                   MOV.L       R1,@R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000099A 62E3                   MOV         R14,R2
    0000099C 63F3                   MOV         R15,R3
    0000099E 732C                   ADD         #44,R3
    000009A0 334C                   ADD         R4,R3
    000009A2 324C                   ADD         R4,R2
    000009A4 5121                   MOV.L       @(4,R2),R1
    000009A6 62E3                   MOV         R14,R2
    000009A8 1311                   MOV.L       R1,@(4,R3)
    000009AA 324C                   ADD         R4,R2
    000009AC 5122                   MOV.L       @(8,R2),R1
    000009AE 63F3                   MOV         R15,R3
    000009B0 732C                   ADD         #44,R3
    000009B2 334C                   ADD         R4,R3
    000009B4 1312                   MOV.L       R1,@(8,R3)
    000009B6 8FE7                   BF/S        L1023
    000009B8 740C                   ADD         #12,R4
    000009BA 6DA3                   MOV         R10,R13
    000009BC              L1025:                            
    000009BC 62D3                   MOV         R13,R2
    000009BE 63D3                   MOV         R13,R3
    000009C0 4200                   SHLL        R2
    000009C2 323C                   ADD         R3,R2
    000009C4 4208                   SHLL2       R2
    000009C6 6183                   MOV         R8,R1
    000009C8 321C                   ADD         R1,R2
    000009CA 6322                   MOV.L       @R2,R3
    000009CC 2338                   TST         R3,R3
    000009CE 8B02                   BF          L1024
    000009D0 7DFF                   ADD         #-1,R13
    000009D2 4D11                   CMP/PZ      R13
    000009D4 89F2                   BT          L1025
    000009D6              L1024:                            
    000009D6 63D3                   MOV         R13,R3
    000009D8 62D3                   MOV         R13,R2
    000009DA 4300                   SHLL        R3
    000009DC 332C                   ADD         R2,R3
    000009DE 4308                   SHLL2       R3
    000009E0 1F31                   MOV.L       R3,@(4,R15)
    000009E2              L1029:                            
    000009E2 6EA3                   MOV         R10,R14
    000009E4              L1031:                            
    000009E4 63E3                   MOV         R14,R3
    000009E6 62E3                   MOV         R14,R2
    000009E8 4300                   SHLL        R3
    000009EA 332C                   ADD         R2,R3
    000009EC 4308                   SHLL2       R3
    000009EE 61F3                   MOV         R15,R1
    000009F0 712C                   ADD         #44,R1
    000009F2 331C                   ADD         R1,R3
    000009F4 6232                   MOV.L       @R3,R2
    000009F6 2228                   TST         R2,R2
    000009F8 8B02                   BF          L1030
    000009FA 7EFF                   ADD         #-1,R14
    000009FC 4E11                   CMP/PZ      R14
    000009FE 89F1                   BT          L1031
    00000A00              L1030:                            
    00000A00 3ED3                   CMP/GE      R13,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A02 8B6B                   BF          L1035
    00000A04 53F1                   MOV.L       @(4,R15),R3
    00000A06 6583                   MOV         R8,R5
    00000A08 66F3                   MOV         R15,R6
    00000A0A 7620                   ADD         #32,R6
    00000A0C 353C                   ADD         R3,R5
    00000A0E 64E3                   MOV         R14,R4
    00000A10 62E3                   MOV         R14,R2
    00000A12 4400                   SHLL        R4
    00000A14 342C                   ADD         R2,R4
    00000A16 4408                   SHLL2       R4
    00000A18 61F3                   MOV         R15,R1
    00000A1A 712C                   ADD         #44,R1
    00000A1C BBE8                   BSR         _div_fract
    00000A1E 341C                   ADD         R1,R4
    00000A20 61E3                   MOV         R14,R1
    00000A22 31D8                   SUB         R13,R1
    00000A24 2F12                   MOV.L       R1,@R15
    00000A26 6313                   MOV         R1,R3
    00000A28 4100                   SHLL        R1
    00000A2A 313C                   ADD         R3,R1
    00000A2C D30C                   MOV.L       L1244+4,R3 ; __quick_odd_mvn
    00000A2E 4108                   SHLL2       R1
    00000A30 6293                   MOV         R9,R2
    00000A32 312C                   ADD         R2,R1
    00000A34 62F3                   MOV         R15,R2
    00000A36 7220                   ADD         #32,R2
    00000A38 430B                   JSR         @R3
    00000A3A E00C                   MOV         #12,R0
    00000A3C 64D3                   MOV         R13,R4
    00000A3E 6CD3                   MOV         R13,R12
    00000A40 3CEC                   ADD         R14,R12
    00000A42 3CD8                   SUB         R13,R12
    00000A44 63C3                   MOV         R12,R3
    00000A46 4C00                   SHLL        R12
    00000A48 3C3C                   ADD         R3,R12
    00000A4A 4C08                   SHLL2       R12
    00000A4C 6BD3                   MOV         R13,R11
    00000A4E 63D3                   MOV         R13,R3
    00000A50 4B00                   SHLL        R11
    00000A52 3B3C                   ADD         R3,R11
    00000A54 4B08                   SHLL2       R11
    00000A56 6283                   MOV         R8,R2
    00000A58 A015                   BRA         L1036
    00000A5A 3B2C                   ADD         R2,R11
    00000A5C              L1244:                            
    00000A5C F65C                   .DATA.W     H'F65C
    00000A5E 04E8                   .DATA.W     H'04E8
    00000A60 <00000000>             .DATA.L     __quick_odd_mvn
    00000A64              L1037:                            
    00000A64 66F3                   MOV         R15,R6
    00000A66 7614                   ADD         #20,R6
    00000A68 65F3                   MOV         R15,R5
    00000A6A 7520                   ADD         #32,R5
    00000A6C BB89                   BSR         _mult_fract
    00000A6E 64B3                   MOV         R11,R4
    00000A70 968C                   MOV.W       L1245,R6   ; H'04E8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A72 65F3                   MOV         R15,R5
    00000A74 36FC                   ADD         R15,R6
    00000A76 36CC                   ADD         R12,R6
    00000A78 7514                   ADD         #20,R5
    00000A7A 64F3                   MOV         R15,R4
    00000A7C 742C                   ADD         #44,R4
    00000A7E BB72                   BSR         _subtr_fract
    00000A80 34CC                   ADD         R12,R4
    00000A82 7CF4                   ADD         #-12,R12
    00000A84 7BF4                   ADD         #-12,R11
    00000A86              L1036:                            
    00000A86 6283                   MOV         R8,R2
    00000A88 3B22                   CMP/HS      R2,R11
    00000A8A 89EB                   BT          L1037
    00000A8C 62F2                   MOV.L       @R15,R2
    00000A8E 65E3                   MOV         R14,R5
    00000A90 64E3                   MOV         R14,R4
    00000A92 63E3                   MOV         R14,R3
    00000A94 4400                   SHLL        R4
    00000A96 343C                   ADD         R3,R4
    00000A98 3523                   CMP/GE      R2,R5
    00000A9A 8FA2                   BF/S        L1029
    00000A9C 4408                   SHLL2       R4
    00000A9E              L1039:                            
    00000A9E 61F3                   MOV         R15,R1
    00000AA0 9374                   MOV.W       L1245,R3   ; H'04E8
    00000AA2 75FF                   ADD         #-1,R5
    00000AA4 712C                   ADD         #44,R1
    00000AA6 314C                   ADD         R4,R1
    00000AA8 33FC                   ADD         R15,R3
    00000AAA 334C                   ADD         R4,R3
    00000AAC 6232                   MOV.L       @R3,R2
    00000AAE 63F3                   MOV         R15,R3
    00000AB0 2122                   MOV.L       R2,@R1
    00000AB2 732C                   ADD         #44,R3
    00000AB4 926A                   MOV.W       L1245,R2   ; H'04E8
    00000AB6 334C                   ADD         R4,R3
    00000AB8 32FC                   ADD         R15,R2
    00000ABA 324C                   ADD         R4,R2
    00000ABC 5121                   MOV.L       @(4,R2),R1
    00000ABE 1311                   MOV.L       R1,@(4,R3)
    00000AC0 9264                   MOV.W       L1245,R2   ; H'04E8
    00000AC2 63F3                   MOV         R15,R3
    00000AC4 732C                   ADD         #44,R3
    00000AC6 334C                   ADD         R4,R3
    00000AC8 32FC                   ADD         R15,R2
    00000ACA 324C                   ADD         R4,R2
    00000ACC 5122                   MOV.L       @(8,R2),R1
    00000ACE 1312                   MOV.L       R1,@(8,R3)
    00000AD0 63F2                   MOV.L       @R15,R3
    00000AD2 3533                   CMP/GE      R3,R5
    00000AD4 8DE3                   BT/S        L1039
    00000AD6 74F4                   ADD         #-12,R4
    00000AD8 AF83                   BRA         L1029
    00000ADA 0009                   NOP
    00000ADC              L1035:                            
    00000ADC E500                   MOV         #0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ADE E400                   MOV         #0,R4
    00000AE0              L1040:                            
    00000AE0 6393                   MOV         R9,R3
    00000AE2 334C                   ADD         R4,R3
    00000AE4 62F3                   MOV         R15,R2
    00000AE6 722C                   ADD         #44,R2
    00000AE8 324C                   ADD         R4,R2
    00000AEA 7501                   ADD         #1,R5
    00000AEC 6122                   MOV.L       @R2,R1
    00000AEE 35A7                   CMP/GT      R10,R5
    00000AF0 2312                   MOV.L       R1,@R3
    00000AF2 62F3                   MOV         R15,R2
    00000AF4 6393                   MOV         R9,R3
    00000AF6 334C                   ADD         R4,R3
    00000AF8 722C                   ADD         #44,R2
    00000AFA 324C                   ADD         R4,R2
    00000AFC 5121                   MOV.L       @(4,R2),R1
    00000AFE 62F3                   MOV         R15,R2
    00000B00 1311                   MOV.L       R1,@(4,R3)
    00000B02 722C                   ADD         #44,R2
    00000B04 6393                   MOV         R9,R3
    00000B06 334C                   ADD         R4,R3
    00000B08 324C                   ADD         R4,R2
    00000B0A 5122                   MOV.L       @(8,R2),R1
    00000B0C 1312                   MOV.L       R1,@(8,R3)
    00000B0E 8FE7                   BF/S        L1040
    00000B10 740C                   ADD         #12,R4
    00000B12 913C                   MOV.W       L1245+2,R1 ; H'09A4
    00000B14 3F1C                   ADD         R1,R15
    00000B16 4F26                   LDS.L       @R15+,PR
    00000B18 68F6                   MOV.L       @R15+,R8
    00000B1A 69F6                   MOV.L       @R15+,R9
    00000B1C 6AF6                   MOV.L       @R15+,R10
    00000B1E 6BF6                   MOV.L       @R15+,R11
    00000B20 6CF6                   MOV.L       @R15+,R12
    00000B22 6DF6                   MOV.L       @R15+,R13
    00000B24 000B                   RTS
    00000B26 6EF6                   MOV.L       @R15+,R14
    00000B28              _factor_poly:                    ; function: factor_poly
                                                           ; frame size=4932
                                                           ; used runtime library name:
                                                           ; __modls
    00000B28 2FE6                   MOV.L       R14,@-R15
    00000B2A 2FD6                   MOV.L       R13,@-R15
    00000B2C 2FC6                   MOV.L       R12,@-R15
    00000B2E 2FB6                   MOV.L       R11,@-R15
    00000B30 2FA6                   MOV.L       R10,@-R15
    00000B32 2F96                   MOV.L       R9,@-R15
    00000B34 2F86                   MOV.L       R8,@-R15
    00000B36 4F22                   STS.L       PR,@-R15
    00000B38 902A                   MOV.W       L1245+4,R0 ; H'ECE8
    00000B3A 3F0C                   ADD         R0,R15
    00000B3C 9329                   MOV.W       L1245+6,R3 ; H'1314
    00000B3E 33FC                   ADD         R15,R3
    00000B40 2352                   MOV.L       R5,@R3
    00000B42 D814                   MOV.L       L1245+8,R8 ; L551
    00000B44 DD14                   MOV.L       L1245+12,R13; _print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B46 BBD5                   BSR         _poly_degree
    00000B48 6943                   MOV         R4,R9
    00000B4A 88FF                   CMP/EQ      #-1,R0
    00000B4C 8B3E                   BF          L1042
    00000B4E 9020                   MOV.W       L1245+6,R0 ; H'1314
    00000B50 02FE                   MOV.L       @(R0,R15),R2
    00000B52 6322                   MOV.L       @R2,R3
    00000B54 2338                   TST         R3,R3
    00000B56 8931                   BT          L1043
    00000B58 901B                   MOV.W       L1245+6,R0 ; H'1314
    00000B5A 00FE                   MOV.L       @(R0,R15),R0
    00000B5C 5002                   MOV.L       @(8,R0),R0
    00000B5E 88FF                   CMP/EQ      #-1,R0
    00000B60 8B02                   BF          L1044
    00000B62 D20E                   MOV.L       L1245+16,R2; L550
    00000B64 A001                   BRA         L1226
    00000B66 2F26                   MOV.L       R2,@-R15
    00000B68              L1044:                            
    00000B68 2F86                   MOV.L       R8,@-R15
    00000B6A              L1226:                            
    00000B6A 4D0B                   JSR         @R13
    00000B6C 0009                   NOP
    00000B6E 7F04                   ADD         #4,R15
    00000B70 900F                   MOV.W       L1245+6,R0 ; H'1314
    00000B72 00FE                   MOV.L       @(R0,R15),R0
    00000B74 5001                   MOV.L       @(4,R0),R0
    00000B76 8801                   CMP/EQ      #1,R0
    00000B78 8B14                   BF          L1046
    00000B7A 900A                   MOV.W       L1245+6,R0 ; H'1314
    00000B7C D108                   MOV.L       L1245+20,R1; L553
    00000B7E 02FE                   MOV.L       @(R0,R15),R2
    00000B80 6322                   MOV.L       @R2,R3
    00000B82 2F36                   MOV.L       R3,@-R15
    00000B84 4D0B                   JSR         @R13
    00000B86 2F16                   MOV.L       R1,@-R15
    00000B88 A018                   BRA         L1043
    00000B8A 7F08                   ADD         #8,R15
    00000B8C              L1245:                            
    00000B8C 04E8                   .DATA.W     H'04E8
    00000B8E 09A4                   .DATA.W     H'09A4
    00000B90 ECE8                   .DATA.W     H'ECE8
    00000B92 1314                   .DATA.W     H'1314
    00000B94 <00000000>             .DATA.L     L551
    00000B98 <00000000>             .DATA.L     _print
    00000B9C <00000000>             .DATA.L     L550
    00000BA0 <00000000>             .DATA.L     L553
    00000BA4              L1046:                            
    00000BA4 9055                   MOV.W       L1246,R0   ; H'1314
    00000BA6 02FE                   MOV.L       @(R0,R15),R2
    00000BA8 9054                   MOV.W       L1246+2,R0 ; H'1318
    00000BAA 5321                   MOV.L       @(4,R2),R3
    00000BAC D22A                   MOV.L       L1246+6,R2 ; L555
    00000BAE 2F36                   MOV.L       R3,@-R15
    00000BB0 01FE                   MOV.L       @(R0,R15),R1
    00000BB2 6312                   MOV.L       @R1,R3
    00000BB4 2F36                   MOV.L       R3,@-R15
    00000BB6 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BB8 2F26                   MOV.L       R2,@-R15
    00000BBA 7F0C                   ADD         #12,R15
    00000BBC              L1043:                            
    00000BBC D327                   MOV.L       L1246+10,R3; L446
    00000BBE 4D0B                   JSR         @R13
    00000BC0 2F36                   MOV.L       R3,@-R15
    00000BC2 D227                   MOV.L       L1246+14,R2; L556
    00000BC4 4D0B                   JSR         @R13
    00000BC6 2F26                   MOV.L       R2,@-R15
    00000BC8 A185                   BRA         L1048
    00000BCA 7F08                   ADD         #8,R15
    00000BCC              L1042:                            
    00000BCC EE01                   MOV         #1,R14
    00000BCE BB91                   BSR         _poly_degree
    00000BD0 6493                   MOV         R9,R4
    00000BD2 30E7                   CMP/GT      R14,R0
    00000BD4 893A                   BT          L1049
    00000BD6 4D0B                   JSR         @R13
    00000BD8 2F86                   MOV.L       R8,@-R15
    00000BDA BC6A                   BSR         _print_poly_noendl
    00000BDC 6493                   MOV         R9,R4
    00000BDE D221                   MOV.L       L1246+18,R2; L558
    00000BE0 4D0B                   JSR         @R13
    00000BE2 2F26                   MOV.L       R2,@-R15
    00000BE4 9035                   MOV.W       L1246,R0   ; H'1314
    00000BE6 7F08                   ADD         #8,R15
    00000BE8 03FE                   MOV.L       @(R0,R15),R3
    00000BEA 6232                   MOV.L       @R3,R2
    00000BEC 2228                   TST         R2,R2
    00000BEE 8925                   BT          L1050
    00000BF0 902F                   MOV.W       L1246,R0   ; H'1314
    00000BF2 00FE                   MOV.L       @(R0,R15),R0
    00000BF4 5002                   MOV.L       @(8,R0),R0
    00000BF6 88FF                   CMP/EQ      #-1,R0
    00000BF8 8B02                   BF          L1051
    00000BFA D21B                   MOV.L       L1246+22,R2; L550
    00000BFC A001                   BRA         L1227
    00000BFE 2F26                   MOV.L       R2,@-R15
    00000C00              L1051:                            
    00000C00 2F86                   MOV.L       R8,@-R15
    00000C02              L1227:                            
    00000C02 4D0B                   JSR         @R13
    00000C04 0009                   NOP
    00000C06 7F04                   ADD         #4,R15
    00000C08 9023                   MOV.W       L1246,R0   ; H'1314
    00000C0A 00FE                   MOV.L       @(R0,R15),R0
    00000C0C 5001                   MOV.L       @(4,R0),R0
    00000C0E 8801                   CMP/EQ      #1,R0
    00000C10 8B08                   BF          L1053
    00000C12 901E                   MOV.W       L1246,R0   ; H'1314
    00000C14 D115                   MOV.L       L1246+26,R1; L553
    00000C16 02FE                   MOV.L       @(R0,R15),R2
    00000C18 6322                   MOV.L       @R2,R3
    00000C1A 2F36                   MOV.L       R3,@-R15
    00000C1C 4D0B                   JSR         @R13
    00000C1E 2F16                   MOV.L       R1,@-R15
    00000C20 A00C                   BRA         L1050




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C22 7F08                   ADD         #8,R15
    00000C24              L1053:                            
    00000C24 9015                   MOV.W       L1246,R0   ; H'1314
    00000C26 02FE                   MOV.L       @(R0,R15),R2
    00000C28 9014                   MOV.W       L1246+2,R0 ; H'1318
    00000C2A 5321                   MOV.L       @(4,R2),R3
    00000C2C D20A                   MOV.L       L1246+6,R2 ; L555
    00000C2E 2F36                   MOV.L       R3,@-R15
    00000C30 01FE                   MOV.L       @(R0,R15),R1
    00000C32 6312                   MOV.L       @R1,R3
    00000C34 2F36                   MOV.L       R3,@-R15
    00000C36 4D0B                   JSR         @R13
    00000C38 2F26                   MOV.L       R2,@-R15
    00000C3A 7F0C                   ADD         #12,R15
    00000C3C              L1050:                            
    00000C3C D307                   MOV.L       L1246+10,R3; L446
    00000C3E 4D0B                   JSR         @R13
    00000C40 2F36                   MOV.L       R3,@-R15
    00000C42 D20B                   MOV.L       L1246+30,R2; L562
    00000C44 4D0B                   JSR         @R13
    00000C46 2F26                   MOV.L       R2,@-R15
    00000C48 A145                   BRA         L1048
    00000C4A 7F08                   ADD         #8,R15
    00000C4C              L1049:                            
    00000C4C E400                   MOV         #0,R4
    00000C4E A012                   BRA         L1055
    00000C50 E564                   MOV         #100,R5
    00000C52              L1246:                            
    00000C52 1314                   .DATA.W     H'1314
    00000C54 1318                   .DATA.W     H'1318
    00000C56 0000                   .DATA.W     0
    00000C58 <00000000>             .DATA.L     L555
    00000C5C <00000000>             .DATA.L     L446
    00000C60 <00000000>             .DATA.L     L556
    00000C64 <00000000>             .DATA.L     L558
    00000C68 <00000000>             .DATA.L     L550
    00000C6C <00000000>             .DATA.L     L553
    00000C70 <00000000>             .DATA.L     L562
    00000C74              L1056:                            
    00000C74 7401                   ADD         #1,R4
    00000C76              L1055:                            
    00000C76 3457                   CMP/GT      R5,R4
    00000C78 8909                   BT          L1057
    00000C7A 6343                   MOV         R4,R3
    00000C7C 6243                   MOV         R4,R2
    00000C7E 4300                   SHLL        R3
    00000C80 332C                   ADD         R2,R3
    00000C82 4308                   SHLL2       R3
    00000C84 6193                   MOV         R9,R1
    00000C86 331C                   ADD         R1,R3
    00000C88 6232                   MOV.L       @R3,R2
    00000C8A 2228                   TST         R2,R2
    00000C8C 89F2                   BT          L1056
    00000C8E              L1057:                            
    00000C8E 1F43                   MOV.L       R4,@(12,R15)
    00000C90 BB30                   BSR         _poly_degree
    00000C92 6493                   MOV         R9,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C94 1F05                   MOV.L       R0,@(20,R15)
    00000C96 9443                   MOV.W       L1247,R4   ; H'0E58
    00000C98 BB16                   BSR         _init_poly
    00000C9A 34FC                   ADD         R15,R4
    00000C9C 55F5                   MOV.L       @(20,R15),R5
    00000C9E 6353                   MOV         R5,R3
    00000CA0 4500                   SHLL        R5
    00000CA2 353C                   ADD         R3,R5
    00000CA4 4508                   SHLL2       R5
    00000CA6 6393                   MOV         R9,R3
    00000CA8 1F51                   MOV.L       R5,@(4,R15)
    00000CAA 353C                   ADD         R3,R5
    00000CAC 1F54                   MOV.L       R5,@(16,R15)
    00000CAE 6552                   MOV.L       @R5,R5
    00000CB0 54F4                   MOV.L       @(16,R15),R4
    00000CB2 B9BB                   BSR         _x_lcm
    00000CB4 5441                   MOV.L       @(4,R4),R4
    00000CB6 2F06                   MOV.L       R0,@-R15
    00000CB8 55F4                   MOV.L       @(16,R15),R5
    00000CBA 6353                   MOV         R5,R3
    00000CBC 4500                   SHLL        R5
    00000CBE 353C                   ADD         R3,R5
    00000CC0 4508                   SHLL2       R5
    00000CC2 6393                   MOV         R9,R3
    00000CC4 1F51                   MOV.L       R5,@(4,R15)
    00000CC6 353C                   ADD         R3,R5
    00000CC8 1F53                   MOV.L       R5,@(12,R15)
    00000CCA 6552                   MOV.L       @R5,R5
    00000CCC 54F3                   MOV.L       @(12,R15),R4
    00000CCE B9AD                   BSR         _x_lcm
    00000CD0 5441                   MOV.L       @(4,R4),R4
    00000CD2 6403                   MOV         R0,R4
    00000CD4 B9AA                   BSR         _x_lcm
    00000CD6 65F6                   MOV.L       @R15+,R5
    00000CD8 9122                   MOV.W       L1247,R1   ; H'0E58
    00000CDA 31FC                   ADD         R15,R1
    00000CDC 2102                   MOV.L       R0,@R1
    00000CDE 9020                   MOV.W       L1247+2,R0 ; H'0E5C
    00000CE0 9621                   MOV.W       L1247+6,R6 ; H'099C
    00000CE2 0FE6                   MOV.L       R14,@(R0,R15)
    00000CE4 901E                   MOV.W       L1247+4,R0 ; H'0E60
    00000CE6 36FC                   ADD         R15,R6
    00000CE8 951A                   MOV.W       L1247,R5   ; H'0E58
    00000CEA 0FE6                   MOV.L       R14,@(R0,R15)
    00000CEC 35FC                   ADD         R15,R5
    00000CEE BD12                   BSR         _mult_poly
    00000CF0 6493                   MOV         R9,R4
    00000CF2 66F3                   MOV         R15,R6
    00000CF4 9514                   MOV.W       L1247,R5   ; H'0E58
    00000CF6 7618                   ADD         #24,R6
    00000CF8 9416                   MOV.W       L1247+8,R4 ; H'1314
    00000CFA 35FC                   ADD         R15,R5
    00000CFC BA78                   BSR         _div_fract
    00000CFE 34FC                   ADD         R15,R4
    00000D00 A0B3                   BRA         L1058
    00000D02 6BE3                   MOV         R14,R11
    00000D04              L1059:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D04 63F2                   MOV.L       @R15,R3
    00000D06 910E                   MOV.W       L1247+6,R1 ; H'099C
    00000D08 D208                   MOV.L       L1247+12,R2; __modls
    00000D0A 31FC                   ADD         R15,R1
    00000D0C 313C                   ADD         R3,R1
    00000D0E 6112                   MOV.L       @R1,R1
    00000D10 420B                   JSR         @R2
    00000D12 60B3                   MOV         R11,R0
    00000D14 2008                   TST         R0,R0
    00000D16 8901                   BT          L1248
    00000D18 A0A6                   BRA         L1061
    00000D1A 0009                   NOP
    00000D1C              L1248:                            
    00000D1C A09B                   BRA         L1062
    00000D1E 6CE3                   MOV         R14,R12
    00000D20              L1247:                            
    00000D20 0E58                   .DATA.W     H'0E58
    00000D22 0E5C                   .DATA.W     H'0E5C
    00000D24 0E60                   .DATA.W     H'0E60
    00000D26 099C                   .DATA.W     H'099C
    00000D28 1314                   .DATA.W     H'1314
    00000D2A 0000                   .DATA.W     0
    00000D2C <00000000>             .DATA.L     __modls
    00000D30              L1063:                            
    00000D30 53F1                   MOV.L       @(4,R15),R3
    00000D32 9181                   MOV.W       L1249,R1   ; H'099C
    00000D34 D244                   MOV.L       L1249+16,R2; __modls
    00000D36 31FC                   ADD         R15,R1
    00000D38 313C                   ADD         R3,R1
    00000D3A 6112                   MOV.L       @R1,R1
    00000D3C 420B                   JSR         @R2
    00000D3E 60C3                   MOV         R12,R0
    00000D40 2008                   TST         R0,R0
    00000D42 8901                   BT          L1250
    00000D44 A086                   BRA         L1065
    00000D46 0009                   NOP
    00000D48              L1250:                            
    00000D48 DA40                   MOV.L       L1249+20,R10; L565
    00000D4A 2FC6                   MOV.L       R12,@-R15
    00000D4C 2FB6                   MOV.L       R11,@-R15
    00000D4E 4D0B                   JSR         @R13
    00000D50 2FA6                   MOV.L       R10,@-R15
    00000D52 7F0C                   ADD         #12,R15
    00000D54 9471                   MOV.W       L1249+2,R4 ; H'04E0
    00000D56 BAB7                   BSR         _init_poly
    00000D58 34FC                   ADD         R15,R4
    00000D5A EAFF                   MOV         #-1,R10
    00000D5C 946D                   MOV.W       L1249+2,R4 ; H'04E0
    00000D5E 906D                   MOV.W       L1249+4,R0 ; H'04EC
    00000D60 0FE6                   MOV.L       R14,@(R0,R15)
    00000D62 906C                   MOV.W       L1249+6,R0 ; H'04F0
    00000D64 0FE6                   MOV.L       R14,@(R0,R15)
    00000D66 906B                   MOV.W       L1249+8,R0 ; H'04F4
    00000D68 0FE6                   MOV.L       R14,@(R0,R15)
    00000D6A 9066                   MOV.W       L1249+2,R0 ; H'04E0
    00000D6C 0FB6                   MOV.L       R11,@(R0,R15)
    00000D6E 9068                   MOV.W       L1249+10,R0; H'04E4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D70 0FC6                   MOV.L       R12,@(R0,R15)
    00000D72 9067                   MOV.W       L1249+12,R0; H'04E8
    00000D74 0FA6                   MOV.L       R10,@(R0,R15)
    00000D76 B96E                   BSR         _simp_fract
    00000D78 34FC                   ADD         R15,R4
    00000D7A 66F3                   MOV         R15,R6
    00000D7C 955D                   MOV.W       L1249+2,R5 ; H'04E0
    00000D7E 7624                   ADD         #36,R6
    00000D80 945A                   MOV.W       L1249,R4   ; H'099C
    00000D82 35FC                   ADD         R15,R5
    00000D84 BDE5                   BSR         _rem_poly
    00000D86 34FC                   ADD         R15,R4
    00000D88 64F3                   MOV         R15,R4
    00000D8A BAB3                   BSR         _poly_degree
    00000D8C 7424                   ADD         #36,R4
    00000D8E 88FF                   CMP/EQ      #-1,R0
    00000D90 893B                   BT          L719
    00000D92 9452                   MOV.W       L1249+2,R4 ; H'04E0
    00000D94 BA98                   BSR         _init_poly
    00000D96 34FC                   ADD         R15,R4
    00000D98 9050                   MOV.W       L1249+4,R0 ; H'04EC
    00000D9A 0FE6                   MOV.L       R14,@(R0,R15)
    00000D9C 904F                   MOV.W       L1249+6,R0 ; H'04F0
    00000D9E 0FE6                   MOV.L       R14,@(R0,R15)
    00000DA0 904E                   MOV.W       L1249+8,R0 ; H'04F4
    00000DA2 0FE6                   MOV.L       R14,@(R0,R15)
    00000DA4 9049                   MOV.W       L1249+2,R0 ; H'04E0
    00000DA6 0FB6                   MOV.L       R11,@(R0,R15)
    00000DA8 904B                   MOV.W       L1249+10,R0; H'04E4
    00000DAA 0FC6                   MOV.L       R12,@(R0,R15)
    00000DAC 904A                   MOV.W       L1249+12,R0; H'04E8
    00000DAE 0FE6                   MOV.L       R14,@(R0,R15)
    00000DB0 9443                   MOV.W       L1249+2,R4 ; H'04E0
    00000DB2 B950                   BSR         _simp_fract
    00000DB4 34FC                   ADD         R15,R4
    00000DB6 66F3                   MOV         R15,R6
    00000DB8 953F                   MOV.W       L1249+2,R5 ; H'04E0
    00000DBA 7624                   ADD         #36,R6
    00000DBC 943C                   MOV.W       L1249,R4   ; H'099C
    00000DBE 35FC                   ADD         R15,R5
    00000DC0 BDC7                   BSR         _rem_poly
    00000DC2 34FC                   ADD         R15,R4
    00000DC4 64F3                   MOV         R15,R4
    00000DC6 BA95                   BSR         _poly_degree
    00000DC8 7424                   ADD         #36,R4
    00000DCA 88FF                   CMP/EQ      #-1,R0
    00000DCC 891D                   BT          L719
    00000DCE 9434                   MOV.W       L1249+2,R4 ; H'04E0
    00000DD0 BA7A                   BSR         _init_poly
    00000DD2 34FC                   ADD         R15,R4
    00000DD4 9032                   MOV.W       L1249+4,R0 ; H'04EC
    00000DD6 0FE6                   MOV.L       R14,@(R0,R15)
    00000DD8 9031                   MOV.W       L1249+6,R0 ; H'04F0
    00000DDA 0FE6                   MOV.L       R14,@(R0,R15)
    00000DDC 9030                   MOV.W       L1249+8,R0 ; H'04F4
    00000DDE 0FA6                   MOV.L       R10,@(R0,R15)
    00000DE0 902B                   MOV.W       L1249+2,R0 ; H'04E0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DE2 0FB6                   MOV.L       R11,@(R0,R15)
    00000DE4 902D                   MOV.W       L1249+10,R0; H'04E4
    00000DE6 0FC6                   MOV.L       R12,@(R0,R15)
    00000DE8 902C                   MOV.W       L1249+12,R0; H'04E8
    00000DEA 0FA6                   MOV.L       R10,@(R0,R15)
    00000DEC 9425                   MOV.W       L1249+2,R4 ; H'04E0
    00000DEE B932                   BSR         _simp_fract
    00000DF0 34FC                   ADD         R15,R4
    00000DF2 66F3                   MOV         R15,R6
    00000DF4 9521                   MOV.W       L1249+2,R5 ; H'04E0
    00000DF6 7624                   ADD         #36,R6
    00000DF8 941E                   MOV.W       L1249,R4   ; H'099C
    00000DFA 35FC                   ADD         R15,R5
    00000DFC BDA9                   BSR         _rem_poly
    00000DFE 34FC                   ADD         R15,R4
    00000E00 64F3                   MOV         R15,R4
    00000E02 BA77                   BSR         _poly_degree
    00000E04 7424                   ADD         #36,R4
    00000E06 88FF                   CMP/EQ      #-1,R0
    00000E08 8B24                   BF          L1065
    00000E0A              L719:
    00000E0A 66F3                   MOV         R15,R6
    00000E0C 9515                   MOV.W       L1249+2,R5 ; H'04E0
    00000E0E 7624                   ADD         #36,R6
    00000E10 9412                   MOV.W       L1249,R4   ; H'099C
    00000E12 35FC                   ADD         R15,R5
    00000E14 BCCB                   BSR         _div_poly
    00000E16 34FC                   ADD         R15,R4
    00000E18 4D0B                   JSR         @R13
    00000E1A 2F86                   MOV.L       R8,@-R15
    00000E1C 64F3                   MOV         R15,R4
    00000E1E BB48                   BSR         _print_poly_noendl
    00000E20 7428                   ADD         #40,R4
    00000E22 D30B                   MOV.L       L1249+24,R3; L558
    00000E24 4D0B                   JSR         @R13
    00000E26 2F36                   MOV.L       R3,@-R15
    00000E28 7F08                   ADD         #8,R15
    00000E2A 65F3                   MOV         R15,R5
    00000E2C 7518                   ADD         #24,R5
    00000E2E 64F3                   MOV         R15,R4
    00000E30 BE7A                   BSR         _factor_poly
    00000E32 7424                   ADD         #36,R4
    00000E34 A04F                   BRA         L1048
    00000E36 0009                   NOP
    00000E38              L1249:                            
    00000E38 099C                   .DATA.W     H'099C
    00000E3A 04E0                   .DATA.W     H'04E0
    00000E3C 04EC                   .DATA.W     H'04EC
    00000E3E 04F0                   .DATA.W     H'04F0
    00000E40 04F4                   .DATA.W     H'04F4
    00000E42 04E4                   .DATA.W     H'04E4
    00000E44 04E8                   .DATA.W     H'04E8
    00000E46 0000                   .DATA.W     0
    00000E48 <00000000>             .DATA.L     __modls
    00000E4C <00000000>             .DATA.L     L565
    00000E50 <00000000>             .DATA.L     L558
    00000E54              L1065:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E54 7C01                   ADD         #1,R12
    00000E56              L1062:                            
    00000E56 53F1                   MOV.L       @(4,R15),R3
    00000E58 928B                   MOV.W       L1251,R2   ; H'099C
    00000E5A 32FC                   ADD         R15,R2
    00000E5C 323C                   ADD         R3,R2
    00000E5E 6122                   MOV.L       @R2,R1
    00000E60 3C17                   CMP/GT      R1,R12
    00000E62 8901                   BT          L1252
    00000E64 AF64                   BRA         L1063
    00000E66 0009                   NOP
    00000E68              L1252:                            
    00000E68              L1061:                            
    00000E68 7B01                   ADD         #1,R11
    00000E6A              L1058:                            
    00000E6A 63F2                   MOV.L       @R15,R3
    00000E6C 9281                   MOV.W       L1251,R2   ; H'099C
    00000E6E 32FC                   ADD         R15,R2
    00000E70 323C                   ADD         R3,R2
    00000E72 6122                   MOV.L       @R2,R1
    00000E74 3B17                   CMP/GT      R1,R11
    00000E76 8901                   BT          L1253
    00000E78 AF44                   BRA         L1059
    00000E7A 0009                   NOP
    00000E7C              L1253:                            
    00000E7C 4D0B                   JSR         @R13
    00000E7E 2F86                   MOV.L       R8,@-R15
    00000E80 BB17                   BSR         _print_poly_noendl
    00000E82 6493                   MOV         R9,R4
    00000E84 D33D                   MOV.L       L1251+10,R3; L558
    00000E86 4D0B                   JSR         @R13
    00000E88 2F36                   MOV.L       R3,@-R15
    00000E8A 7F08                   ADD         #8,R15
    00000E8C 52F6                   MOV.L       @(24,R15),R2
    00000E8E 2228                   TST         R2,R2
    00000E90 891A                   BT          L1069
    00000E92 50F8                   MOV.L       @(32,R15),R0
    00000E94 88FF                   CMP/EQ      #-1,R0
    00000E96 8B02                   BF          L1070
    00000E98 D239                   MOV.L       L1251+14,R2; L550
    00000E9A A001                   BRA         L1228
    00000E9C 2F26                   MOV.L       R2,@-R15
    00000E9E              L1070:                            
    00000E9E 2F86                   MOV.L       R8,@-R15
    00000EA0              L1228:                            
    00000EA0 4D0B                   JSR         @R13
    00000EA2 0009                   NOP
    00000EA4 7F04                   ADD         #4,R15
    00000EA6 55F7                   MOV.L       @(28,R15),R5
    00000EA8 54F6                   MOV.L       @(24,R15),R4
    00000EAA 6053                   MOV         R5,R0
    00000EAC 8801                   CMP/EQ      #1,R0
    00000EAE 8B05                   BF          L1072
    00000EB0 2F46                   MOV.L       R4,@-R15
    00000EB2 D234                   MOV.L       L1251+18,R2; L553
    00000EB4 4D0B                   JSR         @R13
    00000EB6 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EB8 A006                   BRA         L1069
    00000EBA 7F08                   ADD         #8,R15
    00000EBC              L1072:                            
    00000EBC 2F56                   MOV.L       R5,@-R15
    00000EBE 2F46                   MOV.L       R4,@-R15
    00000EC0 D231                   MOV.L       L1251+22,R2; L555
    00000EC2 4D0B                   JSR         @R13
    00000EC4 2F26                   MOV.L       R2,@-R15
    00000EC6 7F0C                   ADD         #12,R15
    00000EC8              L1069:                            
    00000EC8 D330                   MOV.L       L1251+26,R3; L446
    00000ECA 4D0B                   JSR         @R13
    00000ECC 2F36                   MOV.L       R3,@-R15
    00000ECE D230                   MOV.L       L1251+30,R2; L572
    00000ED0 4D0B                   JSR         @R13
    00000ED2 2F26                   MOV.L       R2,@-R15
    00000ED4 7F08                   ADD         #8,R15
    00000ED6              L1048:                            
    00000ED6 914D                   MOV.W       L1251+2,R1 ; H'1318
    00000ED8 3F1C                   ADD         R1,R15
    00000EDA 4F26                   LDS.L       @R15+,PR
    00000EDC 68F6                   MOV.L       @R15+,R8
    00000EDE 69F6                   MOV.L       @R15+,R9
    00000EE0 6AF6                   MOV.L       @R15+,R10
    00000EE2 6BF6                   MOV.L       @R15+,R11
    00000EE4 6CF6                   MOV.L       @R15+,R12
    00000EE6 6DF6                   MOV.L       @R15+,R13
    00000EE8 000B                   RTS
    00000EEA 6EF6                   MOV.L       @R15+,R14
    00000EEC              _solvepoly:                      ; function: solvepoly
                                                           ; frame size=1232
    00000EEC 4F22                   STS.L       PR,@-R15
    00000EEE 9042                   MOV.W       L1251+4,R0 ; H'FB3C
    00000EF0 3F0C                   ADD         R0,R15
    00000EF2 2F42                   MOV.L       R4,@R15
    00000EF4 1F51                   MOV.L       R5,@(4,R15)
    00000EF6 64F3                   MOV         R15,R4
    00000EF8 B9E6                   BSR         _init_poly
    00000EFA 7408                   ADD         #8,R4
    00000EFC 55F1                   MOV.L       @(4,R15),R5
    00000EFE 66F3                   MOV         R15,R6
    00000F00 7608                   ADD         #8,R6
    00000F02 BBCD                   BSR         _subtr_poly
    00000F04 64F2                   MOV.L       @R15,R4
    00000F06 64F3                   MOV         R15,R4
    00000F08 BA07                   BSR         _print_poly
    00000F0A 7408                   ADD         #8,R4
    00000F0C D321                   MOV.L       L1251+34,R3; L579
    00000F0E D222                   MOV.L       L1251+38,R2; _print
    00000F10 420B                   JSR         @R2
    00000F12 2F36                   MOV.L       R3,@-R15
    00000F14 D121                   MOV.L       L1251+42,R1; L580
    00000F16 D320                   MOV.L       L1251+38,R3; _print
    00000F18 430B                   JSR         @R3
    00000F1A 2F16                   MOV.L       R1,@-R15
    00000F1C 912C                   MOV.W       L1251+6,R1 ; H'04CC
    00000F1E 3F1C                   ADD         R1,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F20 4F26                   LDS.L       @R15+,PR
    00000F22 000B                   RTS
    00000F24 0009                   NOP
    00000F26              _read_num:                       ; function: read_num
                                                           ; frame size=64
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    00000F26 2FE6                   MOV.L       R14,@-R15
    00000F28 2FD6                   MOV.L       R13,@-R15
    00000F2A 6E43                   MOV         R4,R14
    00000F2C D21C                   MOV.L       L1251+46,R2; L587
    00000F2E 2FC6                   MOV.L       R12,@-R15
    00000F30 2FB6                   MOV.L       R11,@-R15
    00000F32 6B53                   MOV         R5,R11
    00000F34 D31B                   MOV.L       L1251+50,R3; __slow_mvn
    00000F36 2FA6                   MOV.L       R10,@-R15
    00000F38 2F96                   MOV.L       R9,@-R15
    00000F3A 2F86                   MOV.L       R8,@-R15
    00000F3C 4F22                   STS.L       PR,@-R15
    00000F3E 7FE0                   ADD         #-32,R15
    00000F40 6CF3                   MOV         R15,R12
    00000F42 61F3                   MOV         R15,R1
    00000F44 430B                   JSR         @R3
    00000F46 E01E                   MOV         #30,R0
    00000F48 EA00                   MOV         #0,R10
    00000F4A 64E3                   MOV         R14,R4
    00000F4C 34BC                   ADD         R11,R4
    00000F4E 6040                   MOV.B       @R4,R0
    00000F50 8878                   CMP/EQ      #120,R0
    00000F52 8D0C                   BT/S        L721
    00000F54 6DA3                   MOV         R10,R13
    00000F56 6040                   MOV.B       @R4,R0
    00000F58 882B                   CMP/EQ      #43,R0
    00000F5A 8F25                   BF/S        L1076
    00000F5C 65C3                   MOV         R12,R5
    00000F5E 7E01                   ADD         #1,R14
    00000F60 6240                   MOV.B       @R4,R2
    00000F62 60E3                   MOV         R14,R0
    00000F64 2520                   MOV.B       R2,@R5
    00000F66 00BC                   MOV.B       @(R0,R11),R0
    00000F68 8878                   CMP/EQ      #120,R0
    00000F6A 8F29                   BF/S        L1078
    00000F6C 7D01                   ADD         #1,R13
    00000F6E              L721:
    00000F6E A040                   BRA         L1075
    00000F70 E001                   MOV         #1,R0
    00000F72              L1251:                            
    00000F72 099C                   .DATA.W     H'099C
    00000F74 1318                   .DATA.W     H'1318
    00000F76 FB3C                   .DATA.W     H'FB3C
    00000F78 04CC                   .DATA.W     H'04CC
    00000F7A 0000                   .DATA.W     0
    00000F7C <00000000>             .DATA.L     L558
    00000F80 <00000000>             .DATA.L     L550
    00000F84 <00000000>             .DATA.L     L553
    00000F88 <00000000>             .DATA.L     L555
    00000F8C <00000000>             .DATA.L     L446




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F90 <00000000>             .DATA.L     L572
    00000F94 <00000000>             .DATA.L     L579
    00000F98 <00000000>             .DATA.L     _print
    00000F9C <00000000>             .DATA.L     L580
    00000FA0 <00000000>             .DATA.L     L587
    00000FA4 <00000000>             .DATA.L     __slow_mvn
    00000FA8              L1076:                            
    00000FA8 882D                   CMP/EQ      #45,R0
    00000FAA 8B09                   BF          L1078
    00000FAC 6240                   MOV.B       @R4,R2
    00000FAE 7E01                   ADD         #1,R14
    00000FB0 2520                   MOV.B       R2,@R5
    00000FB2 60E3                   MOV         R14,R0
    00000FB4 00BC                   MOV.B       @(R0,R11),R0
    00000FB6 8878                   CMP/EQ      #120,R0
    00000FB8 8F02                   BF/S        L1078
    00000FBA 7D01                   ADD         #1,R13
    00000FBC A019                   BRA         L1075
    00000FBE E0FF                   MOV         #-1,R0
    00000FC0              L1078:                            
    00000FC0 D873                   MOV.L       L1254+2,R8 ; _strlen
    00000FC2 A00F                   BRA         L1081
    00000FC4 E930                   MOV         #48,R9
    00000FC6              L1082:                            
    00000FC6 64E3                   MOV         R14,R4
    00000FC8 34BC                   ADD         R11,R4
    00000FCA 6540                   MOV.B       @R4,R5
    00000FCC 3593                   CMP/GE      R9,R5
    00000FCE 8B0D                   BF          L720
    00000FD0 E239                   MOV         #57,R2
    00000FD2 3527                   CMP/GT      R2,R5
    00000FD4 890A                   BT          L720
    00000FD6 60D3                   MOV         R13,R0
    00000FD8 6340                   MOV.B       @R4,R3
    00000FDA 7E01                   ADD         #1,R14
    00000FDC 0C34                   MOV.B       R3,@(R0,R12)
    00000FDE 7D01                   ADD         #1,R13
    00000FE0 60D3                   MOV         R13,R0
    00000FE2 0CA4                   MOV.B       R10,@(R0,R12)
    00000FE4              L1081:                            
    00000FE4 480B                   JSR         @R8
    00000FE6 64B3                   MOV         R11,R4
    00000FE8 3E02                   CMP/HS      R0,R14
    00000FEA 8BEC                   BF          L1082
    00000FEC              L720:
    00000FEC D369                   MOV.L       L1254+6,R3 ; _atoi
    00000FEE 430B                   JSR         @R3
    00000FF0 64C3                   MOV         R12,R4
    00000FF2              L1075:                            
    00000FF2 7F20                   ADD         #32,R15
    00000FF4 4F26                   LDS.L       @R15+,PR
    00000FF6 68F6                   MOV.L       @R15+,R8
    00000FF8 69F6                   MOV.L       @R15+,R9
    00000FFA 6AF6                   MOV.L       @R15+,R10
    00000FFC 6BF6                   MOV.L       @R15+,R11
    00000FFE 6CF6                   MOV.L       @R15+,R12
    00001000 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001002 000B                   RTS
    00001004 6EF6                   MOV.L       @R15+,R14
    00001006              _read_poly:                      ; function: read_poly
                                                           ; frame size=68
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00001006 2FE6                   MOV.L       R14,@-R15
    00001008 2FD6                   MOV.L       R13,@-R15
    0000100A 2FC6                   MOV.L       R12,@-R15
    0000100C 2FB6                   MOV.L       R11,@-R15
    0000100E 6C53                   MOV         R5,R12
    00001010 2FA6                   MOV.L       R10,@-R15
    00001012 6B43                   MOV         R4,R11
    00001014 2F96                   MOV.L       R9,@-R15
    00001016 2F86                   MOV.L       R8,@-R15
    00001018 4F22                   STS.L       PR,@-R15
    0000101A 7FDC                   ADD         #-36,R15
    0000101C 2F62                   MOV.L       R6,@R15
    0000101E 1F72                   MOV.L       R7,@(8,R15)
    00001020 B952                   BSR         _init_poly
    00001022 64B3                   MOV         R11,R4
    00001024 64F3                   MOV         R15,R4
    00001026 B837                   BSR         _init_fract
    00001028 7418                   ADD         #24,R4
    0000102A A0F3                   BRA         L1085
    0000102C 6EF2                   MOV.L       @R15,R14
    0000102E              L1086:                            
    0000102E 65C3                   MOV         R12,R5
    00001030 BF79                   BSR         _read_num
    00001032 64E3                   MOV         R14,R4
    00001034 6D03                   MOV         R0,R13
    00001036 60E3                   MOV         R14,R0
    00001038 00CC                   MOV.B       @(R0,R12),R0
    0000103A 882B                   CMP/EQ      #43,R0
    0000103C 8D03                   BT/S        L1088
    0000103E 6403                   MOV         R0,R4
    00001040 6043                   MOV         R4,R0
    00001042 882D                   CMP/EQ      #45,R0
    00001044 8B02                   BF          L1089
    00001046              L1088:                            
    00001046 A001                   BRA         L1089
    00001048 7E01                   ADD         #1,R14
    0000104A              L1090:                            
    0000104A 7E01                   ADD         #1,R14
    0000104C              L1089:                            
    0000104C 64E3                   MOV         R14,R4
    0000104E 34CC                   ADD         R12,R4
    00001050 6540                   MOV.B       @R4,R5
    00001052 E330                   MOV         #48,R3
    00001054 3533                   CMP/GE      R3,R5
    00001056 8B02                   BF          L1091
    00001058 E139                   MOV         #57,R1
    0000105A 3517                   CMP/GT      R1,R5
    0000105C 8BF5                   BF          L1090
    0000105E              L1091:                            
    0000105E E801                   MOV         #1,R8
    00001060 E9FF                   MOV         #-1,R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001062 63DB                   NEG         R13,R3
    00001064 2F32                   MOV.L       R3,@R15
    00001066 6040                   MOV.B       @R4,R0
    00001068 882A                   CMP/EQ      #42,R0
    0000106A 8F4E                   BF/S        L1092
    0000106C EA00                   MOV         #0,R10
    0000106E 7E02                   ADD         #2,R14
    00001070 60E3                   MOV         R14,R0
    00001072 00CC                   MOV.B       @(R0,R12),R0
    00001074 885E                   CMP/EQ      #94,R0
    00001076 8B3A                   BF          L1093
    00001078 7E01                   ADD         #1,R14
    0000107A 65C3                   MOV         R12,R5
    0000107C BF53                   BSR         _read_num
    0000107E 64E3                   MOV         R14,R4
    00001080 1F01                   MOV.L       R0,@(4,R15)
    00001082 60E3                   MOV         R14,R0
    00001084 00CC                   MOV.B       @(R0,R12),R0
    00001086 882B                   CMP/EQ      #43,R0
    00001088 8D03                   BT/S        L1095
    0000108A 6403                   MOV         R0,R4
    0000108C 6043                   MOV         R4,R0
    0000108E 882D                   CMP/EQ      #45,R0
    00001090 8B02                   BF          L1096
    00001092              L1095:                            
    00001092 A001                   BRA         L1096
    00001094 7E01                   ADD         #1,R14
    00001096              L1097:                            
    00001096 7E01                   ADD         #1,R14
    00001098              L1096:                            
    00001098 60E3                   MOV         R14,R0
    0000109A E330                   MOV         #48,R3
    0000109C 04CC                   MOV.B       @(R0,R12),R4
    0000109E 3433                   CMP/GE      R3,R4
    000010A0 8B02                   BF          L1098
    000010A2 E239                   MOV         #57,R2
    000010A4 3427                   CMP/GT      R2,R4
    000010A6 8BF6                   BF          L1097
    000010A8              L1098:                            
    000010A8 D23B                   MOV.L       L1254+10,R2; _init_fract
    000010AA 64F3                   MOV         R15,R4
    000010AC 420B                   JSR         @R2
    000010AE 7418                   ADD         #24,R4
    000010B0 4D11                   CMP/PZ      R13
    000010B2 8D02                   BT/S        L1099
    000010B4 1F87                   MOV.L       R8,@(28,R15)
    000010B6 1F98                   MOV.L       R9,@(32,R15)
    000010B8 6DF2                   MOV.L       @R15,R13
    000010BA              L1099:                            
    000010BA 2DD8                   TST         R13,R13
    000010BC 8F01                   BF/S        L1100
    000010BE 1FD6                   MOV.L       R13,@(24,R15)
    000010C0 1FA7                   MOV.L       R10,@(28,R15)
    000010C2              L1100:                            
    000010C2 66F3                   MOV         R15,R6
    000010C4 5DF1                   MOV.L       @(4,R15),R13
    000010C6 65B3                   MOV         R11,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010C8 760C                   ADD         #12,R6
    000010CA 63D3                   MOV         R13,R3
    000010CC 4D00                   SHLL        R13
    000010CE 3D3C                   ADD         R3,R13
    000010D0 D332                   MOV.L       L1254+14,R3; _add_fract
    000010D2 4D08                   SHLL2       R13
    000010D4 35DC                   ADD         R13,R5
    000010D6 64F3                   MOV         R15,R4
    000010D8 430B                   JSR         @R3
    000010DA 7418                   ADD         #24,R4
    000010DC D330                   MOV.L       L1254+18,R3; __quick_odd_mvn
    000010DE 61B3                   MOV         R11,R1
    000010E0 31DC                   ADD         R13,R1
    000010E2 62F3                   MOV         R15,R2
    000010E4 720C                   ADD         #12,R2
    000010E6 430B                   JSR         @R3
    000010E8 E00C                   MOV         #12,R0
    000010EA A093                   BRA         L1085
    000010EC 0009                   NOP
    000010EE              L1093:                            
    000010EE 64F3                   MOV         R15,R4
    000010F0 D129                   MOV.L       L1254+10,R1; _init_fract
    000010F2 410B                   JSR         @R1
    000010F4 7418                   ADD         #24,R4
    000010F6 4D11                   CMP/PZ      R13
    000010F8 8D02                   BT/S        L1102
    000010FA 1F87                   MOV.L       R8,@(28,R15)
    000010FC 1F98                   MOV.L       R9,@(32,R15)
    000010FE 6DF2                   MOV.L       @R15,R13
    00001100              L1102:                            
    00001100 2DD8                   TST         R13,R13
    00001102 8F5C                   BF/S        L722
    00001104 1FD6                   MOV.L       R13,@(24,R15)
    00001106 A05A                   BRA         L722
    00001108 1FA7                   MOV.L       R10,@(28,R15)
    0000110A              L1092:                            
    0000110A 8878                   CMP/EQ      #120,R0
    0000110C 8B68                   BF          L1105
    0000110E 7E01                   ADD         #1,R14
    00001110 60E3                   MOV         R14,R0
    00001112 00CC                   MOV.B       @(R0,R12),R0
    00001114 885E                   CMP/EQ      #94,R0
    00001116 8B45                   BF          L1106
    00001118 7E01                   ADD         #1,R14
    0000111A 65C3                   MOV         R12,R5
    0000111C BF03                   BSR         _read_num
    0000111E 64E3                   MOV         R14,R4
    00001120 1F01                   MOV.L       R0,@(4,R15)
    00001122 60E3                   MOV         R14,R0
    00001124 00CC                   MOV.B       @(R0,R12),R0
    00001126 882B                   CMP/EQ      #43,R0
    00001128 8D03                   BT/S        L1108
    0000112A 6403                   MOV         R0,R4
    0000112C 6043                   MOV         R4,R0
    0000112E 882D                   CMP/EQ      #45,R0
    00001130 8B02                   BF          L1109
    00001132              L1108:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001132 A001                   BRA         L1109
    00001134 7E01                   ADD         #1,R14
    00001136              L1110:                            
    00001136 7E01                   ADD         #1,R14
    00001138              L1109:                            
    00001138 60E3                   MOV         R14,R0
    0000113A E330                   MOV         #48,R3
    0000113C 04CC                   MOV.B       @(R0,R12),R4
    0000113E 3433                   CMP/GE      R3,R4
    00001140 8B02                   BF          L1111
    00001142 E239                   MOV         #57,R2
    00001144 3427                   CMP/GT      R2,R4
    00001146 8BF6                   BF          L1110
    00001148              L1111:                            
    00001148 D213                   MOV.L       L1254+10,R2; _init_fract
    0000114A 64F3                   MOV         R15,R4
    0000114C 420B                   JSR         @R2
    0000114E 7418                   ADD         #24,R4
    00001150 4D11                   CMP/PZ      R13
    00001152 8D02                   BT/S        L1112
    00001154 1F87                   MOV.L       R8,@(28,R15)
    00001156 1F98                   MOV.L       R9,@(32,R15)
    00001158 6DF2                   MOV.L       @R15,R13
    0000115A              L1112:                            
    0000115A 2DD8                   TST         R13,R13
    0000115C 8F01                   BF/S        L1113
    0000115E 1FD6                   MOV.L       R13,@(24,R15)
    00001160 1FA7                   MOV.L       R10,@(28,R15)
    00001162              L1113:                            
    00001162 66F3                   MOV         R15,R6
    00001164 5DF1                   MOV.L       @(4,R15),R13
    00001166 65B3                   MOV         R11,R5
    00001168 760C                   ADD         #12,R6
    0000116A 63D3                   MOV         R13,R3
    0000116C 4D00                   SHLL        R13
    0000116E 3D3C                   ADD         R3,R13
    00001170 D30A                   MOV.L       L1254+14,R3; _add_fract
    00001172 4D08                   SHLL2       R13
    00001174 35DC                   ADD         R13,R5
    00001176 64F3                   MOV         R15,R4
    00001178 430B                   JSR         @R3
    0000117A 7418                   ADD         #24,R4
    0000117C D308                   MOV.L       L1254+18,R3; __quick_odd_mvn
    0000117E 61B3                   MOV         R11,R1
    00001180 31DC                   ADD         R13,R1
    00001182 62F3                   MOV         R15,R2
    00001184 720C                   ADD         #12,R2
    00001186 430B                   JSR         @R3
    00001188 E00C                   MOV         #12,R0
    0000118A A043                   BRA         L1085
    0000118C 0009                   NOP
    0000118E              L1254:                            
    0000118E 0000                   .DATA.W     0
    00001190 <00000000>             .DATA.L     _strlen
    00001194 <00000000>             .DATA.L     _atoi
    00001198 <00000000>             .DATA.L     _init_fract
    0000119C <00000000>             .DATA.L     _add_fract




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011A0 <00000000>             .DATA.L     __quick_odd_mvn
    000011A4              L1106:                            
    000011A4 D147                   MOV.L       L1255+8,R1 ; _init_fract
    000011A6 64F3                   MOV         R15,R4
    000011A8 410B                   JSR         @R1
    000011AA 7418                   ADD         #24,R4
    000011AC 4D11                   CMP/PZ      R13
    000011AE 8D02                   BT/S        L1115
    000011B0 1F87                   MOV.L       R8,@(28,R15)
    000011B2 1F98                   MOV.L       R9,@(32,R15)
    000011B4 6DF2                   MOV.L       @R15,R13
    000011B6              L1115:                            
    000011B6 2DD8                   TST         R13,R13
    000011B8 8F01                   BF/S        L722
    000011BA 1FD6                   MOV.L       R13,@(24,R15)
    000011BC 1FA7                   MOV.L       R10,@(28,R15)
    000011BE              L722:
    000011BE 66F3                   MOV         R15,R6
    000011C0 D341                   MOV.L       L1255+12,R3; _add_fract
    000011C2 65B3                   MOV         R11,R5
    000011C4 760C                   ADD         #12,R6
    000011C6 750C                   ADD         #12,R5
    000011C8 64F3                   MOV         R15,R4
    000011CA 430B                   JSR         @R3
    000011CC 7418                   ADD         #24,R4
    000011CE 61B3                   MOV         R11,R1
    000011D0 D33E                   MOV.L       L1255+16,R3; __quick_odd_mvn
    000011D2 62F3                   MOV         R15,R2
    000011D4 710C                   ADD         #12,R1
    000011D6 720C                   ADD         #12,R2
    000011D8 430B                   JSR         @R3
    000011DA E00C                   MOV         #12,R0
    000011DC A01A                   BRA         L1085
    000011DE 0009                   NOP
    000011E0              L1105:                            
    000011E0 D138                   MOV.L       L1255+8,R1 ; _init_fract
    000011E2 64F3                   MOV         R15,R4
    000011E4 410B                   JSR         @R1
    000011E6 7418                   ADD         #24,R4
    000011E8 4D11                   CMP/PZ      R13
    000011EA 8D02                   BT/S        L1118
    000011EC 1F87                   MOV.L       R8,@(28,R15)
    000011EE 1F98                   MOV.L       R9,@(32,R15)
    000011F0 6DF2                   MOV.L       @R15,R13
    000011F2              L1118:                            
    000011F2 2DD8                   TST         R13,R13
    000011F4 8F01                   BF/S        L1119
    000011F6 1FD6                   MOV.L       R13,@(24,R15)
    000011F8 1FA7                   MOV.L       R10,@(28,R15)
    000011FA              L1119:                            
    000011FA 66F3                   MOV         R15,R6
    000011FC D332                   MOV.L       L1255+12,R3; _add_fract
    000011FE 65B3                   MOV         R11,R5
    00001200 760C                   ADD         #12,R6
    00001202 64F3                   MOV         R15,R4
    00001204 430B                   JSR         @R3
    00001206 7418                   ADD         #24,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001208 D330                   MOV.L       L1255+16,R3; __quick_odd_mvn
    0000120A 61B3                   MOV         R11,R1
    0000120C 62F3                   MOV         R15,R2
    0000120E 720C                   ADD         #12,R2
    00001210 430B                   JSR         @R3
    00001212 E00C                   MOV         #12,R0
    00001214              L1085:                            
    00001214 52F2                   MOV.L       @(8,R15),R2
    00001216 3E27                   CMP/GT      R2,R14
    00001218 8901                   BT          L1256
    0000121A AF08                   BRA         L1086
    0000121C 0009                   NOP
    0000121E              L1256:                            
    0000121E 7F24                   ADD         #36,R15
    00001220 4F26                   LDS.L       @R15+,PR
    00001222 68F6                   MOV.L       @R15+,R8
    00001224 69F6                   MOV.L       @R15+,R9
    00001226 6AF6                   MOV.L       @R15+,R10
    00001228 6BF6                   MOV.L       @R15+,R11
    0000122A 6CF6                   MOV.L       @R15+,R12
    0000122C 6DF6                   MOV.L       @R15+,R13
    0000122E 000B                   RTS
    00001230 6EF6                   MOV.L       @R15+,R14
    00001232              _programa:                       ; function: programa
                                                           ; frame size=4688
    00001232 2FE6                   MOV.L       R14,@-R15
    00001234 2FD6                   MOV.L       R13,@-R15
    00001236 ED00                   MOV         #0,R13
    00001238 9441                   MOV.W       L1255+2,R4 ; H'0D70
    0000123A 2FC6                   MOV.L       R12,@-R15
    0000123C 2FB6                   MOV.L       R11,@-R15
    0000123E EB01                   MOV         #1,R11
    00001240 2FA6                   MOV.L       R10,@-R15
    00001242 2F96                   MOV.L       R9,@-R15
    00001244 2F86                   MOV.L       R8,@-R15
    00001246 4F22                   STS.L       PR,@-R15
    00001248 9038                   MOV.W       L1255,R0   ; H'EDD4
    0000124A 3F0C                   ADD         R0,R15
    0000124C DA20                   MOV.L       L1255+20,R10; _print
    0000124E 2FB2                   MOV.L       R11,@R15
    00001250 B83A                   BSR         _init_poly
    00001252 34FC                   ADD         R15,R4
    00001254 9434                   MOV.W       L1255+4,R4 ; H'08B4
    00001256 B837                   BSR         _init_poly
    00001258 34FC                   ADD         R15,R4
    0000125A 9432                   MOV.W       L1255+6,R4 ; H'03F8
    0000125C B834                   BSR         _init_poly
    0000125E 34FC                   ADD         R15,R4
    00001260 D31C                   MOV.L       L1255+24,R3; _getchar
    00001262 6EF3                   MOV         R15,R14
    00001264 7E04                   ADD         #4,R14
    00001266 69E3                   MOV         R14,R9
    00001268 62D3                   MOV         R13,R2
    0000126A 430B                   JSR         @R3
    0000126C 2920                   MOV.B       R2,@R9
    0000126E 6493                   MOV         R9,R4
    00001270 2900                   MOV.B       R0,@R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001272 7401                   ADD         #1,R4
    00001274 6843                   MOV         R4,R8
    00001276 A00B                   BRA         L1120
    00001278 6C43                   MOV         R4,R12
    0000127A              L1121:                            
    0000127A D316                   MOV.L       L1255+24,R3; _getchar
    0000127C 430B                   JSR         @R3
    0000127E 0009                   NOP
    00001280 2C00                   MOV.B       R0,@R12
    00001282 7801                   ADD         #1,R8
    00001284 62F2                   MOV.L       @R15,R2
    00001286 7C01                   ADD         #1,R12
    00001288 7201                   ADD         #1,R2
    0000128A E300                   MOV         #0,R3
    0000128C 2F22                   MOV.L       R2,@R15
    0000128E 2830                   MOV.B       R3,@R8
    00001290              L1120:                            
    00001290 60F2                   MOV.L       @R15,R0
    00001292 70FF                   ADD         #-1,R0
    00001294 00EC                   MOV.B       @(R0,R14),R0
    00001296 880A                   CMP/EQ      #10,R0
    00001298 8BEF                   BF          L1121
    0000129A 6090                   MOV.B       @R9,R0
    0000129C 8871                   CMP/EQ      #113,R0
    0000129E 8F02                   BF/S        L1257
    000012A0 6403                   MOV         R0,R4
    000012A2 A16E                   BRA         L1235
    000012A4 0009                   NOP
    000012A6              L1257:                            
    000012A6 6043                   MOV         R4,R0
    000012A8 8851                   CMP/EQ      #81,R0
    000012AA 8B01                   BF          L1258
    000012AC A169                   BRA         L1235
    000012AE 0009                   NOP
    000012B0              L1258:                            
    000012B0 DC09                   MOV.L       L1255+28,R12; _strlen
    000012B2 6090                   MOV.B       @R9,R0
    000012B4 882A                   CMP/EQ      #42,R0
    000012B6 8B54                   BF          L1125
    000012B8 A020                   BRA         L1126
    000012BA 69B3                   MOV         R11,R9
    000012BC              L1255:                            
    000012BC EDD4                   .DATA.W     H'EDD4
    000012BE 0D70                   .DATA.W     H'0D70
    000012C0 08B4                   .DATA.W     H'08B4
    000012C2 03F8                   .DATA.W     H'03F8
    000012C4 <00000000>             .DATA.L     _init_fract
    000012C8 <00000000>             .DATA.L     _add_fract
    000012CC <00000000>             .DATA.L     __quick_odd_mvn
    000012D0 <00000000>             .DATA.L     _print
    000012D4 <00000000>             .DATA.L     _getchar
    000012D8 <00000000>             .DATA.L     _strlen
    000012DC              L1127:                            
    000012DC 6093                   MOV         R9,R0
    000012DE 00EC                   MOV.B       @(R0,R14),R0
    000012E0 8828                   CMP/EQ      #40,R0
    000012E2 8F01                   BF/S        L1128




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012E4 6093                   MOV         R9,R0
    000012E6 7D01                   ADD         #1,R13
    000012E8              L1128:                            
    000012E8 00EC                   MOV.B       @(R0,R14),R0
    000012EA 8829                   CMP/EQ      #41,R0
    000012EC 8B05                   BF          L1129
    000012EE 2DD8                   TST         R13,R13
    000012F0 8B01                   BF          L1259
    000012F2 A172                   BRA         L742
    000012F4 0009                   NOP
    000012F6              L1259:                            
    000012F6 4D10                   DT          R13
    000012F8 8904                   BT          L1132
    000012FA              L1129:                            
    000012FA 7901                   ADD         #1,R9
    000012FC              L1126:                            
    000012FC 4C0B                   JSR         @R12
    000012FE 64E3                   MOV         R14,R4
    00001300 3902                   CMP/HS      R0,R9
    00001302 8BEB                   BF          L1127
    00001304              L1132:                            
    00001304 9450                   MOV.W       L1260,R4   ; H'0D70
    00001306 6793                   MOV         R9,R7
    00001308 77FF                   ADD         #-1,R7
    0000130A E602                   MOV         #2,R6
    0000130C 65E3                   MOV         R14,R5
    0000130E BE7A                   BSR         _read_poly
    00001310 34FC                   ADD         R15,R4
    00001312 6393                   MOV         R9,R3
    00001314 7302                   ADD         #2,R3
    00001316 A00F                   BRA         L1229
    00001318 2F32                   MOV.L       R3,@R15
    0000131A              L1134:                            
    0000131A 6093                   MOV         R9,R0
    0000131C 00EC                   MOV.B       @(R0,R14),R0
    0000131E 8828                   CMP/EQ      #40,R0
    00001320 8F01                   BF/S        L1135
    00001322 6093                   MOV         R9,R0
    00001324 7D01                   ADD         #1,R13
    00001326              L1135:                            
    00001326 00EC                   MOV.B       @(R0,R14),R0
    00001328 8829                   CMP/EQ      #41,R0
    0000132A 8B05                   BF          L1229
    0000132C 2DD8                   TST         R13,R13
    0000132E 8B01                   BF          L1261
    00001330 A153                   BRA         L742
    00001332 0009                   NOP
    00001334              L1261:                            
    00001334 4D10                   DT          R13
    00001336 8904                   BT          L1139
    00001338              L1229:                            
    00001338 7901                   ADD         #1,R9
    0000133A 4C0B                   JSR         @R12
    0000133C 64E3                   MOV         R14,R4
    0000133E 3902                   CMP/HS      R0,R9
    00001340 8BEB                   BF          L1134
    00001342              L1139:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001342 6793                   MOV         R9,R7
    00001344 66F2                   MOV.L       @R15,R6
    00001346 65E3                   MOV         R14,R5
    00001348 942F                   MOV.W       L1260+2,R4 ; H'08B4
    0000134A 77FF                   ADD         #-1,R7
    0000134C BE5B                   BSR         _read_poly
    0000134E 34FC                   ADD         R15,R4
    00001350 962C                   MOV.W       L1260+4,R6 ; H'03F8
    00001352 36FC                   ADD         R15,R6
    00001354 9529                   MOV.W       L1260+2,R5 ; H'08B4
    00001356 35FC                   ADD         R15,R5
    00001358 9426                   MOV.W       L1260,R4   ; H'0D70
    0000135A B9DC                   BSR         _mult_poly
    0000135C 34FC                   ADD         R15,R4
    0000135E A127                   BRA         L778
    00001360 0009                   NOP
    00001362              L1125:                            
    00001362 882D                   CMP/EQ      #45,R0
    00001364 8B47                   BF          L1141
    00001366 A010                   BRA         L1142
    00001368 69B3                   MOV         R11,R9
    0000136A              L1143:                            
    0000136A 6093                   MOV         R9,R0
    0000136C 00EC                   MOV.B       @(R0,R14),R0
    0000136E 8828                   CMP/EQ      #40,R0
    00001370 8F01                   BF/S        L1144
    00001372 6093                   MOV         R9,R0
    00001374 7D01                   ADD         #1,R13
    00001376              L1144:                            
    00001376 00EC                   MOV.B       @(R0,R14),R0
    00001378 8829                   CMP/EQ      #41,R0
    0000137A 8B05                   BF          L1145
    0000137C 2DD8                   TST         R13,R13
    0000137E 8B01                   BF          L1262
    00001380 A12B                   BRA         L742
    00001382 0009                   NOP
    00001384              L1262:                            
    00001384 4D10                   DT          R13
    00001386 8904                   BT          L1148
    00001388              L1145:                            
    00001388 7901                   ADD         #1,R9
    0000138A              L1142:                            
    0000138A 4C0B                   JSR         @R12
    0000138C 64E3                   MOV         R14,R4
    0000138E 3902                   CMP/HS      R0,R9
    00001390 8BEB                   BF          L1143
    00001392              L1148:                            
    00001392 6793                   MOV         R9,R7
    00001394 9408                   MOV.W       L1260,R4   ; H'0D70
    00001396 E602                   MOV         #2,R6
    00001398 77FF                   ADD         #-1,R7
    0000139A 65E3                   MOV         R14,R5
    0000139C BE33                   BSR         _read_poly
    0000139E 34FC                   ADD         R15,R4
    000013A0 6393                   MOV         R9,R3
    000013A2 7302                   ADD         #2,R3
    000013A4 A012                   BRA         L1230




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013A6 2F32                   MOV.L       R3,@R15
    000013A8              L1260:                            
    000013A8 0D70                   .DATA.W     H'0D70
    000013AA 08B4                   .DATA.W     H'08B4
    000013AC 03F8                   .DATA.W     H'03F8
    000013AE              L1150:                            
    000013AE 6093                   MOV         R9,R0
    000013B0 00EC                   MOV.B       @(R0,R14),R0
    000013B2 8828                   CMP/EQ      #40,R0
    000013B4 8F01                   BF/S        L1151
    000013B6 6093                   MOV         R9,R0
    000013B8 7D01                   ADD         #1,R13
    000013BA              L1151:                            
    000013BA 00EC                   MOV.B       @(R0,R14),R0
    000013BC 8829                   CMP/EQ      #41,R0
    000013BE 8B05                   BF          L1230
    000013C0 2DD8                   TST         R13,R13
    000013C2 8B01                   BF          L1263
    000013C4 A109                   BRA         L742
    000013C6 0009                   NOP
    000013C8              L1263:                            
    000013C8 4D10                   DT          R13
    000013CA 8904                   BT          L1155
    000013CC              L1230:                            
    000013CC 7901                   ADD         #1,R9
    000013CE 4C0B                   JSR         @R12
    000013D0 64E3                   MOV         R14,R4
    000013D2 3902                   CMP/HS      R0,R9
    000013D4 8BEB                   BF          L1150
    000013D6              L1155:                            
    000013D6 6793                   MOV         R9,R7
    000013D8 66F2                   MOV.L       @R15,R6
    000013DA 65E3                   MOV         R14,R5
    000013DC 9453                   MOV.W       L1264,R4   ; H'08B4
    000013DE 77FF                   ADD         #-1,R7
    000013E0 BE11                   BSR         _read_poly
    000013E2 34FC                   ADD         R15,R4
    000013E4 9650                   MOV.W       L1264+2,R6 ; H'03F8
    000013E6 36FC                   ADD         R15,R6
    000013E8 954D                   MOV.W       L1264,R5   ; H'08B4
    000013EA 35FC                   ADD         R15,R5
    000013EC 944D                   MOV.W       L1264+4,R4 ; H'0D70
    000013EE B957                   BSR         _subtr_poly
    000013F0 34FC                   ADD         R15,R4
    000013F2 A0DD                   BRA         L778
    000013F4 0009                   NOP
    000013F6              L1141:                            
    000013F6 6090                   MOV.B       @R9,R0
    000013F8 882B                   CMP/EQ      #43,R0
    000013FA 8B47                   BF          L1157
    000013FC A010                   BRA         L1158
    000013FE 69B3                   MOV         R11,R9
    00001400              L1159:                            
    00001400 6093                   MOV         R9,R0
    00001402 00EC                   MOV.B       @(R0,R14),R0
    00001404 8828                   CMP/EQ      #40,R0
    00001406 8F01                   BF/S        L1160




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001408 6093                   MOV         R9,R0
    0000140A 7D01                   ADD         #1,R13
    0000140C              L1160:                            
    0000140C 00EC                   MOV.B       @(R0,R14),R0
    0000140E 8829                   CMP/EQ      #41,R0
    00001410 8B05                   BF          L1161
    00001412 2DD8                   TST         R13,R13
    00001414 8B01                   BF          L1265
    00001416 A0E0                   BRA         L742
    00001418 0009                   NOP
    0000141A              L1265:                            
    0000141A 4D10                   DT          R13
    0000141C 8904                   BT          L1164
    0000141E              L1161:                            
    0000141E 7901                   ADD         #1,R9
    00001420              L1158:                            
    00001420 4C0B                   JSR         @R12
    00001422 64E3                   MOV         R14,R4
    00001424 3902                   CMP/HS      R0,R9
    00001426 8BEB                   BF          L1159
    00001428              L1164:                            
    00001428 942F                   MOV.W       L1264+4,R4 ; H'0D70
    0000142A 6793                   MOV         R9,R7
    0000142C 77FF                   ADD         #-1,R7
    0000142E E602                   MOV         #2,R6
    00001430 65E3                   MOV         R14,R5
    00001432 BDE8                   BSR         _read_poly
    00001434 34FC                   ADD         R15,R4
    00001436 6393                   MOV         R9,R3
    00001438 7302                   ADD         #2,R3
    0000143A A00F                   BRA         L1232
    0000143C 2F32                   MOV.L       R3,@R15
    0000143E              L1166:                            
    0000143E 6093                   MOV         R9,R0
    00001440 00EC                   MOV.B       @(R0,R14),R0
    00001442 8828                   CMP/EQ      #40,R0
    00001444 8F01                   BF/S        L1167
    00001446 6093                   MOV         R9,R0
    00001448 7D01                   ADD         #1,R13
    0000144A              L1167:                            
    0000144A 00EC                   MOV.B       @(R0,R14),R0
    0000144C 8829                   CMP/EQ      #41,R0
    0000144E 8B05                   BF          L1232
    00001450 2DD8                   TST         R13,R13
    00001452 8B01                   BF          L1266
    00001454 A0C1                   BRA         L742
    00001456 0009                   NOP
    00001458              L1266:                            
    00001458 4D10                   DT          R13
    0000145A 8904                   BT          L1171
    0000145C              L1232:                            
    0000145C 7901                   ADD         #1,R9
    0000145E 4C0B                   JSR         @R12
    00001460 64E3                   MOV         R14,R4
    00001462 3902                   CMP/HS      R0,R9
    00001464 8BEB                   BF          L1166
    00001466              L1171:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001466 6793                   MOV         R9,R7
    00001468 66F2                   MOV.L       @R15,R6
    0000146A 65E3                   MOV         R14,R5
    0000146C 940B                   MOV.W       L1264,R4   ; H'08B4
    0000146E 77FF                   ADD         #-1,R7
    00001470 BDC9                   BSR         _read_poly
    00001472 34FC                   ADD         R15,R4
    00001474 9608                   MOV.W       L1264+2,R6 ; H'03F8
    00001476 36FC                   ADD         R15,R6
    00001478 9505                   MOV.W       L1264,R5   ; H'08B4
    0000147A 35FC                   ADD         R15,R5
    0000147C 9405                   MOV.W       L1264+4,R4 ; H'0D70
    0000147E B8F2                   BSR         _add_poly
    00001480 34FC                   ADD         R15,R4
    00001482 A095                   BRA         L778
    00001484 0009                   NOP
    00001486              L1264:                            
    00001486 08B4                   .DATA.W     H'08B4
    00001488 03F8                   .DATA.W     H'03F8
    0000148A 0D70                   .DATA.W     H'0D70
    0000148C              L1157:                            
    0000148C 8852                   CMP/EQ      #82,R0
    0000148E 8D03                   BT/S        L1174
    00001490 6403                   MOV         R0,R4
    00001492 6043                   MOV         R4,R0
    00001494 8872                   CMP/EQ      #114,R0
    00001496 8B42                   BF          L1173
    00001498              L1174:                            
    00001498 A010                   BRA         L1175
    0000149A 69B3                   MOV         R11,R9
    0000149C              L1176:                            
    0000149C 6093                   MOV         R9,R0
    0000149E 00EC                   MOV.B       @(R0,R14),R0
    000014A0 8828                   CMP/EQ      #40,R0
    000014A2 8F01                   BF/S        L1177
    000014A4 6093                   MOV         R9,R0
    000014A6 7D01                   ADD         #1,R13
    000014A8              L1177:                            
    000014A8 00EC                   MOV.B       @(R0,R14),R0
    000014AA 8829                   CMP/EQ      #41,R0
    000014AC 8B05                   BF          L1178
    000014AE 2DD8                   TST         R13,R13
    000014B0 8B01                   BF          L1267
    000014B2 A092                   BRA         L742
    000014B4 0009                   NOP
    000014B6              L1267:                            
    000014B6 4D10                   DT          R13
    000014B8 8904                   BT          L1181
    000014BA              L1178:                            
    000014BA 7901                   ADD         #1,R9
    000014BC              L1175:                            
    000014BC 4C0B                   JSR         @R12
    000014BE 64E3                   MOV         R14,R4
    000014C0 3902                   CMP/HS      R0,R9
    000014C2 8BEB                   BF          L1176
    000014C4              L1181:                            
    000014C4 9430                   MOV.W       L1268,R4   ; H'0D70




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014C6 6793                   MOV         R9,R7
    000014C8 77FF                   ADD         #-1,R7
    000014CA E602                   MOV         #2,R6
    000014CC 65E3                   MOV         R14,R5
    000014CE BD9A                   BSR         _read_poly
    000014D0 34FC                   ADD         R15,R4
    000014D2 6393                   MOV         R9,R3
    000014D4 7302                   ADD         #2,R3
    000014D6 A00D                   BRA         L1233
    000014D8 2F32                   MOV.L       R3,@R15
    000014DA              L1183:                            
    000014DA 6093                   MOV         R9,R0
    000014DC 00EC                   MOV.B       @(R0,R14),R0
    000014DE 8828                   CMP/EQ      #40,R0
    000014E0 8F01                   BF/S        L1184
    000014E2 6093                   MOV         R9,R0
    000014E4 7D01                   ADD         #1,R13
    000014E6              L1184:                            
    000014E6 00EC                   MOV.B       @(R0,R14),R0
    000014E8 8829                   CMP/EQ      #41,R0
    000014EA 8B03                   BF          L1233
    000014EC 2DD8                   TST         R13,R13
    000014EE 8974                   BT          L742
    000014F0 4D10                   DT          R13
    000014F2 8904                   BT          L1188
    000014F4              L1233:                            
    000014F4 7901                   ADD         #1,R9
    000014F6 4C0B                   JSR         @R12
    000014F8 64E3                   MOV         R14,R4
    000014FA 3902                   CMP/HS      R0,R9
    000014FC 8BED                   BF          L1183
    000014FE              L1188:                            
    000014FE 6793                   MOV         R9,R7
    00001500 66F2                   MOV.L       @R15,R6
    00001502 65E3                   MOV         R14,R5
    00001504 9411                   MOV.W       L1268+2,R4 ; H'08B4
    00001506 77FF                   ADD         #-1,R7
    00001508 BD7D                   BSR         _read_poly
    0000150A 34FC                   ADD         R15,R4
    0000150C 960E                   MOV.W       L1268+4,R6 ; H'03F8
    0000150E 36FC                   ADD         R15,R6
    00001510 950B                   MOV.W       L1268+2,R5 ; H'08B4
    00001512 35FC                   ADD         R15,R5
    00001514 9408                   MOV.W       L1268,R4   ; H'0D70
    00001516 BA1C                   BSR         _rem_poly
    00001518 34FC                   ADD         R15,R4
    0000151A A049                   BRA         L778
    0000151C 0009                   NOP
    0000151E              L1173:                            
    0000151E 6090                   MOV.B       @R9,R0
    00001520 882F                   CMP/EQ      #47,R0
    00001522 8B4B                   BF          L1190
    00001524 A011                   BRA         L1191
    00001526 69B3                   MOV         R11,R9
    00001528              L1268:                            
    00001528 0D70                   .DATA.W     H'0D70
    0000152A 08B4                   .DATA.W     H'08B4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000152C 03F8                   .DATA.W     H'03F8
    0000152E              L1192:                            
    0000152E 6093                   MOV         R9,R0
    00001530 00EC                   MOV.B       @(R0,R14),R0
    00001532 8828                   CMP/EQ      #40,R0
    00001534 8F01                   BF/S        L1193
    00001536 6093                   MOV         R9,R0
    00001538 7D01                   ADD         #1,R13
    0000153A              L1193:                            
    0000153A 00EC                   MOV.B       @(R0,R14),R0
    0000153C 8829                   CMP/EQ      #41,R0
    0000153E 8B03                   BF          L1194
    00001540 2DD8                   TST         R13,R13
    00001542 894A                   BT          L742
    00001544 4D10                   DT          R13
    00001546 8904                   BT          L1197
    00001548              L1194:                            
    00001548 7901                   ADD         #1,R9
    0000154A              L1191:                            
    0000154A 4C0B                   JSR         @R12
    0000154C 64E3                   MOV         R14,R4
    0000154E 3902                   CMP/HS      R0,R9
    00001550 8BED                   BF          L1192
    00001552              L1197:                            
    00001552 6793                   MOV         R9,R7
    00001554 9447                   MOV.W       L1269,R4   ; H'0D70
    00001556 E602                   MOV         #2,R6
    00001558 77FF                   ADD         #-1,R7
    0000155A 65E3                   MOV         R14,R5
    0000155C BD53                   BSR         _read_poly
    0000155E 34FC                   ADD         R15,R4
    00001560 6393                   MOV         R9,R3
    00001562 7302                   ADD         #2,R3
    00001564 A011                   BRA         L1236
    00001566 2F32                   MOV.L       R3,@R15
    00001568              L1199:                            
    00001568 6093                   MOV         R9,R0
    0000156A 00EC                   MOV.B       @(R0,R14),R0
    0000156C 8828                   CMP/EQ      #40,R0
    0000156E 8F01                   BF/S        L1200
    00001570 6093                   MOV         R9,R0
    00001572 7D01                   ADD         #1,R13
    00001574              L1200:                            
    00001574 00EC                   MOV.B       @(R0,R14),R0
    00001576 8829                   CMP/EQ      #41,R0
    00001578 8B07                   BF          L1236
    0000157A 2DD8                   TST         R13,R13
    0000157C 8B03                   BF          L1202
    0000157E A02C                   BRA         L742
    00001580 0009                   NOP
    00001582              L1235:                            
    00001582 A05B                   BRA         L1124
    00001584 E000                   MOV         #0,R0
    00001586              L1202:                            
    00001586 4D10                   DT          R13
    00001588 8904                   BT          L1204
    0000158A              L1236:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000158A 7901                   ADD         #1,R9
    0000158C 4C0B                   JSR         @R12
    0000158E 64E3                   MOV         R14,R4
    00001590 3902                   CMP/HS      R0,R9
    00001592 8BE9                   BF          L1199
    00001594              L1204:                            
    00001594 66F2                   MOV.L       @R15,R6
    00001596 65E3                   MOV         R14,R5
    00001598 9426                   MOV.W       L1269+2,R4 ; H'08B4
    0000159A 6793                   MOV         R9,R7
    0000159C 77FF                   ADD         #-1,R7
    0000159E BD32                   BSR         _read_poly
    000015A0 34FC                   ADD         R15,R4
    000015A2 9622                   MOV.W       L1269+4,R6 ; H'03F8
    000015A4 9520                   MOV.W       L1269+2,R5 ; H'08B4
    000015A6 36FC                   ADD         R15,R6
    000015A8 941D                   MOV.W       L1269,R4   ; H'0D70
    000015AA 35FC                   ADD         R15,R5
    000015AC B8FF                   BSR         _div_poly
    000015AE 34FC                   ADD         R15,R4
    000015B0              L778:
    000015B0 941B                   MOV.W       L1269+4,R4 ; H'03F8
    000015B2 D30E                   MOV.L       L1269+6,R3 ; _print_poly
    000015B4 430B                   JSR         @R3
    000015B6 34FC                   ADD         R15,R4
    000015B8 A039                   BRA         L768
    000015BA 0009                   NOP
    000015BC              L1190:                            
    000015BC 8846                   CMP/EQ      #70,R0
    000015BE 8B38                   BF          L1140
    000015C0 A01B                   BRA         L1207
    000015C2 69B3                   MOV         R11,R9
    000015C4              L1208:                            
    000015C4 6493                   MOV         R9,R4
    000015C6 34EC                   ADD         R14,R4
    000015C8 6040                   MOV.B       @R4,R0
    000015CA 8828                   CMP/EQ      #40,R0
    000015CC 8F01                   BF/S        L1209
    000015CE 6040                   MOV.B       @R4,R0
    000015D0 7D01                   ADD         #1,R13
    000015D2              L1209:                            
    000015D2 8829                   CMP/EQ      #41,R0
    000015D4 8B10                   BF          L1210
    000015D6 2DD8                   TST         R13,R13
    000015D8 8B0C                   BF          L1211
    000015DA              L742:
    000015DA DE05                   MOV.L       L1269+10,R14; L642
    000015DC 4A0B                   JSR         @R10
    000015DE 2FE6                   MOV.L       R14,@-R15
    000015E0 7F04                   ADD         #4,R15
    000015E2 A02B                   BRA         L1124
    000015E4 E0FF                   MOV         #-1,R0
    000015E6              L1269:                            
    000015E6 0D70                   .DATA.W     H'0D70
    000015E8 08B4                   .DATA.W     H'08B4
    000015EA 03F8                   .DATA.W     H'03F8
    000015EC <00000000>             .DATA.L     _print_poly




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015F0 <00000000>             .DATA.L     L642
    000015F4              L1211:                            
    000015F4 4D10                   DT          R13
    000015F6 8904                   BT          L1213
    000015F8              L1210:                            
    000015F8 7901                   ADD         #1,R9
    000015FA              L1207:                            
    000015FA 4C0B                   JSR         @R12
    000015FC 64E3                   MOV         R14,R4
    000015FE 3902                   CMP/HS      R0,R9
    00001600 8BE0                   BF          L1208
    00001602              L1213:                            
    00001602 6793                   MOV         R9,R7
    00001604 944A                   MOV.W       L1270,R4   ; H'0D70
    00001606 E602                   MOV         #2,R6
    00001608 77FF                   ADD         #-1,R7
    0000160A 65E3                   MOV         R14,R5
    0000160C BCFB                   BSR         _read_poly
    0000160E 34FC                   ADD         R15,R4
    00001610 9444                   MOV.W       L1270,R4   ; H'0D70
    00001612 D325                   MOV.L       L1270+12,R3; _print_poly
    00001614 430B                   JSR         @R3
    00001616 34FC                   ADD         R15,R4
    00001618 9041                   MOV.W       L1270+2,R0 ; H'03EC
    0000161A 0FB6                   MOV.L       R11,@(R0,R15)
    0000161C 9040                   MOV.W       L1270+4,R0 ; H'03F0
    0000161E 0FB6                   MOV.L       R11,@(R0,R15)
    00001620 903F                   MOV.W       L1270+6,R0 ; H'03F4
    00001622 0FB6                   MOV.L       R11,@(R0,R15)
    00001624 953B                   MOV.W       L1270+2,R5 ; H'03EC
    00001626 35FC                   ADD         R15,R5
    00001628 9438                   MOV.W       L1270,R4   ; H'0D70
    0000162A BA7D                   BSR         _factor_poly
    0000162C 34FC                   ADD         R15,R4
    0000162E              L768:
    0000162E A005                   BRA         L1124
    00001630 E001                   MOV         #1,R0
    00001632              L1140:                            
    00001632 D21E                   MOV.L       L1270+16,R2; L699
    00001634 4A0B                   JSR         @R10
    00001636 2F26                   MOV.L       R2,@-R15
    00001638 7F04                   ADD         #4,R15
    0000163A E002                   MOV         #2,R0
    0000163C              L1124:                            
    0000163C 9132                   MOV.W       L1270+8,R1 ; H'122C
    0000163E 3F1C                   ADD         R1,R15
    00001640 4F26                   LDS.L       @R15+,PR
    00001642 68F6                   MOV.L       @R15+,R8
    00001644 69F6                   MOV.L       @R15+,R9
    00001646 6AF6                   MOV.L       @R15+,R10
    00001648 6BF6                   MOV.L       @R15+,R11
    0000164A 6CF6                   MOV.L       @R15+,R12
    0000164C 6DF6                   MOV.L       @R15+,R13
    0000164E 000B                   RTS
    00001650 6EF6                   MOV.L       @R15+,R14
    00001652              _doloop:                         ; function: doloop
                                                           ; frame size=4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001652 4F22                   STS.L       PR,@-R15
    00001654              L1214:                            
    00001654 BDED                   BSR         _programa
    00001656 0009                   NOP
    00001658 4015                   CMP/PL      R0
    0000165A 89FB                   BT          L1214
    0000165C 4F26                   LDS.L       @R15+,PR
    0000165E 000B                   RTS
    00001660 0009                   NOP
    00001662              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=8
    00001662 4F22                   STS.L       PR,@-R15
    00001664 D312                   MOV.L       L1270+20,R3; _Bdisp_AllClr_DDVRAM
    00001666 7FFC                   ADD         #-4,R15
    00001668 430B                   JSR         @R3
    0000166A 0009                   NOP
    0000166C D211                   MOV.L       L1270+24,R2; _ML_clear_screen
    0000166E 420B                   JSR         @R2
    00001670 0009                   NOP
    00001672 E501                   MOV         #1,R5
    00001674 D310                   MOV.L       L1270+28,R3; _locate
    00001676 430B                   JSR         @R3
    00001678 6453                   MOV         R5,R4
    0000167A BFEA                   BSR         _doloop
    0000167C 0009                   NOP
    0000167E E501                   MOV         #1,R5
    00001680 D30D                   MOV.L       L1270+28,R3; _locate
    00001682 430B                   JSR         @R3
    00001684 6453                   MOV         R5,R4
    00001686 D40D                   MOV.L       L1270+32,R4; L709
    00001688 D20D                   MOV.L       L1270+36,R2; _Print
    0000168A 420B                   JSR         @R2
    0000168C 0009                   NOP
    0000168E D30D                   MOV.L       L1270+40,R3; _GetKey
    00001690 430B                   JSR         @R3
    00001692 64F3                   MOV         R15,R4
    00001694 7F04                   ADD         #4,R15
    00001696 4F26                   LDS.L       @R15+,PR
    00001698 000B                   RTS
    0000169A E001                   MOV         #1,R0
    0000169C              L1270:                            
    0000169C 0D70                   .DATA.W     H'0D70
    0000169E 03EC                   .DATA.W     H'03EC
    000016A0 03F0                   .DATA.W     H'03F0
    000016A2 03F4                   .DATA.W     H'03F4
    000016A4 122C                   .DATA.W     H'122C
    000016A6 0000                   .DATA.W     0
    000016A8 <00000000>             .DATA.L     _print_poly
    000016AC <00000000>             .DATA.L     L699
    000016B0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000016B4 <00000000>             .DATA.L     _ML_clear_screen
    000016B8 <00000000>             .DATA.L     _locate
    000016BC <00000000>             .DATA.L     L709
    000016C0 <00000000>             .DATA.L     _Print
    000016C4 <00000000>             .DATA.L     _GetKey
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000000 D301                   MOV.L       L1271+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L1271:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
C   00000000              L374:
    00000000 4572726F3A             .SDATA      "Erro: a/0, add_fract"
             20612F302C   
             206164645F   
             6672616374   
    00000014 00                     .DATA.B     H'00
    00000015 00000001               .RES.B      1
    00000016 00000002               .RES.W      1
    00000018              L390:
    00000018 4572726F3A             .SDATA      "Erro: a/0, mult_fract"
             20612F302C   
             206D756C74   
             5F66726163   
             74           
    0000002D 00                     .DATA.B     H'00
    0000002E 00000002               .RES.W      1
    00000030              L398:
    00000030 696E646566             .SDATA      "indefenido"
             656E69646F   
    0000003A 00                     .DATA.B     H'00
    0000003B 00000001               .RES.B      1
    0000003C              L424:
    0000003C 30                     .SDATA      "0"
    0000003D 0A00                   .DATA.B     H'0A,H'00
    0000003F 00000001               .RES.B      1
    00000040              L427:
    00000040 2B                     .SDATA      "+"
    00000041 00                     .DATA.B     H'00
    00000042 00000002               .RES.W      1
    00000044              L428:
    00000044 2D                     .SDATA      "-"
    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L429:
    00000048 6572726F               .SDATA      "erro"
    0000004C 00                     .DATA.B     H'00
    0000004D 00000001               .RES.B      1
    0000004E 00000002               .RES.W      1
    00000050              L431:
    00000050 785E2569               .SDATA      "x^%i"
    00000054 00                     .DATA.B     H'00
    00000055 00000001               .RES.B      1
    00000056 00000002               .RES.W      1
    00000058              L432:
    00000058 2569785E25             .SDATA      "%ix^%i"
             69           
    0000005E 00                     .DATA.B     H'00
    0000005F 00000001               .RES.B      1
    00000060              L434:
    00000060 2825692F25             .SDATA      "(%i/%i)x^%i"
             6929785E25   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             69           
    0000006B 00                     .DATA.B     H'00
    0000006C              L437:
    0000006C 78                     .SDATA      "x"
    0000006D 00                     .DATA.B     H'00
    0000006E 00000002               .RES.W      1
    00000070              L438:
    00000070 256978                 .SDATA      "%ix"
    00000073 00                     .DATA.B     H'00
    00000074              L440:
    00000074 2825692F25             .SDATA      "(%i/%i)x"
             692978       
    0000007C 00                     .DATA.B     H'00
    0000007D 00000001               .RES.B      1
    0000007E 00000002               .RES.W      1
    00000080              L443:
    00000080 2569                   .SDATA      "%i"
    00000082 00                     .DATA.B     H'00
    00000083 00000001               .RES.B      1
    00000084              L445:
    00000084 2825692F25             .SDATA      "(%i/%i)"
             6929         
    0000008B 00                     .DATA.B     H'00
    0000008C              L446:
    0000008C 0A00                   .DATA.B     H'0A,H'00
    0000008E 00000002               .RES.W      1
    00000090              L452:
    00000090 30                     .SDATA      "0"
    00000091 00                     .DATA.B     H'00
    00000092 00000002               .RES.W      1
    00000094              L550:
    00000094 282D                   .SDATA      "(-"
    00000096 00                     .DATA.B     H'00
    00000097 00000001               .RES.B      1
    00000098              L551:
    00000098 28                     .SDATA      "("
    00000099 00                     .DATA.B     H'00
    0000009A 00000002               .RES.W      1
    0000009C              L553:
    0000009C 256929                 .SDATA      "%i)"
    0000009F 00                     .DATA.B     H'00
    000000A0              L555:
    000000A0 25692F2569             .SDATA      "%i/%i)"
             29           
    000000A6 00                     .DATA.B     H'00
    000000A7 00000001               .RES.B      1
    000000A8              L556:
    000000A8 6465677265             .SDATA      "degree=-1"
             653D2D31     
    000000B1 0A00                   .DATA.B     H'0A,H'00
    000000B3 00000001               .RES.B      1
    000000B4              L558:
    000000B4 29                     .SDATA      ")"
    000000B5 00                     .DATA.B     H'00
    000000B6 00000002               .RES.W      1
    000000B8              L562:
    000000B8 6465677265             .SDATA      "degree<=1"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             653C3D31     
    000000C1 0A00                   .DATA.B     H'0A,H'00
    000000C3 00000001               .RES.B      1
    000000C4              L565:
    000000C4 6C6F6F703A             .SDATA      "loop:%i,%i"
             25692C2569   
    000000CE 0A00                   .DATA.B     H'0A,H'00
    000000D0              L572:
    000000D0 454F66                 .SDATA      "EOf"
    000000D3 00                     .DATA.B     H'00
    000000D4              L579:
    000000D4 3D30203C3D             .SDATA      "=0 <=>"
             3E           
    000000DA 0A00                   .DATA.B     H'0A,H'00
    000000DC              L580:
    000000DC 3C3D3E20               .SDATA      "<=> "
    000000E0 00                     .DATA.B     H'00
    000000E1              L587:
    000000E1 00                     .DATA.B     H'00
    000000E2 0000001D01             .DATAB.B    29,0
             00           
    000000FF 00000001               .RES.B      1
    00000100              L642:
    00000100 4572726F3A             .SDATA      "Erro: parentesis"
             2070617265   
             6E74657369   
             73           
    00000110 0A00                   .DATA.B     H'0A,H'00
    00000112 00000002               .RES.W      1
    00000114              L699:
    00000114 6E616F2066             .SDATA      "nao foi possivel processar o input"
             6F6920706F   
             7373697665   
             6C2070726F   
             6365737361   
             72206F2069   
             6E707574     
    00000136 0A00                   .DATA.B     H'0A,H'00
    00000138              L709:
    00000138 4164657573             .SDATA      "Adeus"
    0000013D 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1


















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Dec-2013 17:27:12  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         1




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       74



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000016C8 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000013E Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00001816 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           14
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          29
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           336






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Afonso\AppData\Local\Temp\hmkA8AF.tmp 

